{"version":3,"sources":["webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/bidi.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/collections.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/platform.js","webpack:///node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/scrolling.js","webpack:///node_modules/@angular/cdk/fesm2015/coercion.js","webpack:///src/app/shared/components/checkbox/checkbox.component.ts","webpack:///src/app/shared/components/checkbox/checkbox.component.html","webpack:///src/app/shared/components/checkbox/checkbox.module.ts","webpack:///src/app/shared/components/join-button/join-button.component.ts","webpack:///src/app/shared/components/join-button/join-button.component.html","webpack:///src/app/shared/components/join-button/join-button.module.ts","webpack:///src/app/shared/components/meeting-join-button/meeting-join-button.component.ts","webpack:///src/app/shared/components/meeting-join-button/meeting-join-button.component.html","webpack:///src/app/shared/components/meeting-join-button/meeting-join-button.module.ts","webpack:///src/app/shared/components/meetings/meetings-list/meeting-list-row/meeting-list-row.component.ts","webpack:///src/app/shared/components/meetings/meetings-list/meeting-list-row/meeting-list-row.component.html","webpack:///src/app/shared/components/meetings/meetings-list/meetings-list.component.ts","webpack:///src/app/shared/components/meetings/meetings-list/meetings-list.component.html","webpack:///src/app/shared/components/meetings/meetings-list/meetings-list.module.ts"],"names":["DIR_DOCUMENT","providedIn","factory","DIR_DOCUMENT_FACTORY","Directionality","_document","value","change","bodyDir","body","dir","htmlDir","documentElement","complete","ɵfac","Directionality_Factory","t","ctorParameters","type","undefined","decorators","args","ɵprov","token","Dir","_dir","_isInitialized","old","normalizedValue","toLowerCase","_rawDir","emit","Dir_Factory","ɵdir","selectors","hostVars","hostBindings","Dir_HostBindings","rf","ctx","inputs","outputs","exportAs","features","provide","useExisting","propDecorators","selector","providers","host","BidiModule","ɵmod","ɵinj","BidiModule_Factory","ngJitMode","declarations","exports","DataSource","isDataSource","connect","ArrayDataSource","_data","CollectionViewer","SelectionModel","_multiple","initiallySelectedValues","_emitChanges","_selection","Set","_deselectedToEmit","_selectedToEmit","changed","length","forEach","_markSelected","values","_verifyValueAssignment","_emitChangeEvent","_unmarkSelected","isSelected","deselect","select","_unmarkAll","has","size","isEmpty","predicate","selected","_selected","sort","next","source","added","removed","add","push","getMultipleValuesInSingleSelectionError","Array","from","SelectionChange","Error","UniqueSelectionDispatcher","_listeners","id","name","listener","filter","registered","UniqueSelectionDispatcher_Factory","TreeDataNodeFlattener","hasV8BreakIterator","Intl","v8BreakIterator","_a","Platform","_platformId","isBrowser","document","EDGE","test","navigator","userAgent","TRIDENT","BLINK","window","chrome","CSS","WEBKIT","IOS","FIREFOX","ANDROID","SAFARI","Platform_Factory","Object","PlatformModule","PlatformModule_Factory","supportedInputTypes","candidateInputTypes","getSupportedInputTypes","featureTestInput","createElement","setAttribute","supportsPassiveEvents","supportsPassiveEventListeners","addEventListener","defineProperty","get","normalizePassiveListenerOptions","options","capture","RtlScrollAxisType","NORMAL","NEGATED","INVERTED","rtlScrollAxisType","supportsScrollBehavior","style","getRtlScrollAxisType","scrollContainer","containerStyle","height","width","overflow","visibility","pointerEvents","position","content","contentStyle","appendChild","scrollLeft","parentNode","removeChild","shadowDomIsSupported","_supportsShadowDom","head","createShadowRoot","attachShadow","_c0","_c1","VIRTUAL_SCROLL_STRATEGY","VirtualScrollStrategy","FixedSizeVirtualScrollStrategy","itemSize","minBufferPx","maxBufferPx","_scrolledIndexChange","scrolledIndexChange","pipe","_viewport","_itemSize","_minBufferPx","_maxBufferPx","viewport","_updateTotalContentSize","_updateRenderedRange","index","behavior","scrollToOffset","setTotalContentSize","getDataLength","scrollOffset","measureScrollOffset","firstVisibleIndex","renderedRange","getRenderedRange","newRange","start","end","viewportSize","getViewportSize","dataLength","startBuffer","expandStart","Math","ceil","max","min","endBuffer","expandEnd","floor","setRenderedRange","setRenderedContentOffset","_fixedSizeVirtualScrollStrategyFactory","fixedSizeDir","_scrollStrategy","CdkFixedSizeVirtualScroll","updateItemAndBufferSize","CdkFixedSizeVirtualScroll_Factory","useFactory","deps","DEFAULT_SCROLL_TIME","ScrollDispatcher","_ngZone","_platform","_scrolled","_globalSubscription","_scrolledCount","scrollContainers","Map","scrollable","set","elementScrolled","subscribe","scrollableReference","unsubscribe","auditTimeInMs","observer","_addGlobalListener","subscription","_removeGlobalListener","_","container","deregister","elementRef","ancestors","getAncestorScrollContainers","scrolled","target","indexOf","scrollingContainers","_subscription","_scrollableContainsElement","element","nativeElement","scrollableElement","getElementRef","parentElement","runOutsideAngular","ScrollDispatcher_Factory","CdkScrollable","scrollDispatcher","ngZone","_destroyed","_elementScrolled","register","el","isRtl","left","right","bottom","top","scrollHeight","clientHeight","scrollWidth","clientWidth","_applyScrollToOptions","scrollTo","scrollTop","LEFT","RIGHT","CdkScrollable_Factory","DEFAULT_RESIZE_TIME","ViewportScrollPosition","ViewportRuler","_change","_invalidateCache","_updateViewportSize","_viewportSize","output","scrollPosition","getViewportScrollPosition","documentRect","getBoundingClientRect","scrollY","scrollX","throttleTime","innerWidth","innerHeight","ViewportRuler_Factory","rangesEqual","r1","r2","SCROLL_SCHEDULER","requestAnimationFrame","CdkVirtualScrollViewport","_changeDetectorRef","viewportRuler","_detachedSubject","_renderedRangeSubject","_orientation","Promise","resolve","then","run","renderedRangeStream","asObservable","_totalContentSize","_totalContentWidth","_totalContentHeight","_renderedRange","_dataLength","_renderedContentOffset","_renderedContentOffsetNeedsRewrite","_isChangeDetectionPending","_runAfterChangeDetection","_viewportChanges","EMPTY","checkViewportSize","_measureViewportSize","attach","onContentScrolled","_markChangeDetectionNeeded","detach","forOf","_forOf","dataStream","data","newLength","onDataLengthChanged","_doChangeDetection","_calculateSpacerSize","range","onContentRendered","offset","to","isHorizontal","orientation","axis","axisDirection","transform","Number","_renderedContentTransform","measureRenderedContentSize","onRenderedOffsetChanged","scrollToIndex","contentEl","_contentWrapper","offsetWidth","offsetHeight","measureRangeSize","viewportEl","runAfter","markForCheck","runAfterChangeDetection","fn","CdkVirtualScrollViewport_Factory","ɵcmp","viewQuery","CdkVirtualScrollViewport_Query","_t","first","hostAttrs","CdkVirtualScrollViewport_HostBindings","ngContentSelectors","decls","vars","consts","template","CdkVirtualScrollViewport_Template","styles","encapsulation","changeDetection","None","OnPush","getSize","node","rect","CdkVirtualForOf","_viewContainerRef","_template","_differs","viewChange","_dataSourceChanges","cdkVirtualForTemplateCacheSize","prev","cur","_changeDataSource","_differ","_templateCache","_needsUpdate","_onRenderedDataChange","renderedStartIndex","rangeLen","totalSize","i","view","j","rootNodes","changes","diff","_renderedItems","_updateContext","_applyChanges","destroy","slice","find","create","cdkVirtualForTrackBy","oldDs","newDs","disconnect","count","context","_updateComputedContextProperties","detectChanges","forEachOperation","record","adjustedPreviousIndex","currentIndex","previousIndex","_insertViewForNewItem","$implicit","item","_cacheView","_detachView","move","forEachIdentityChange","remove","_insertViewFromCache","_createEmbeddedViewAt","last","even","odd","createEmbeddedView","cdkVirtualForOf","_cdkVirtualForOf","cachedView","pop","insert","prototype","call","_cdkVirtualForTrackBy","CdkVirtualForOf_Factory","cdkVirtualForTemplate","ScrollingModule","ScrollingModule_Factory","imports","coerceBooleanProperty","coerceNumberProperty","fallbackValue","_isNumberValue","isNaN","parseFloat","coerceArray","isArray","coerceCssPixelValue","coerceElement","elementOrRef","CheckboxComponent","label","checked","invalid","checkedChanged","e","code","preventDefault","stopPropagation","checkboxClicked","checkboxKeyup","templateUrl","styleUrls","CheckboxModule","JoinButtonComponent","joined","disabled","join","JoinButtonModule","MeetingJoinButtonComponent","participationsService","MeetingJoinButtonModule","joinMeeting","MeetingListRowComponent","authService","showBereaved","login","year","sideMenuOpen","console","log","requestToLogin","MeetingsListComponent","isUserHaveAllDetails","showFullMeetings","filteredMeetings","sortedMeetings","sortedColumn","column","direction","meetings","user","meeting","isUserParticipatingMeeting","isUserCanParticipatingMeeting","a","b","aValue","bValue","address","latitude","bereaved","firstName","lastName","toString","localeCompare","api","MeetingsListModule"],"mappings":"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","file":"default~admin-bereaveds-page-admin-bereaveds-page-module~map-meeting-page-map-meeting-page-module~me~2a318174-es5.js","sourcesContent":["import { InjectionToken, inject, EventEmitter, Injectable, Optional, Inject, ɵɵdefineInjectable, ɵɵinject, Directive, Output, Input, NgModule } from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/dir-document-token.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Injection token used to inject the document into Directionality.\n * This is used so that the value can be faked in tests.\n *\n * We can't use the real document in tests because changing the real `dir` causes geometry-based\n * tests in Safari to fail.\n *\n * We also can't re-provide the DOCUMENT token from platform-brower because the unit tests\n * themselves use things like `querySelector` in test code.\n *\n * This token is defined in a separate file from Directionality as a workaround for\n * https://github.com/angular/angular/issues/22559\n *\n * \\@docs-private\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nconst DIR_DOCUMENT = new InjectionToken('cdk-dir-doc', {\n    providedIn: 'root',\n    factory: DIR_DOCUMENT_FACTORY,\n});\n/**\n * \\@docs-private\n * @return {?}\n */\nfunction DIR_DOCUMENT_FACTORY() {\n    return inject(DOCUMENT);\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/directionality.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The directionality (LTR / RTL) context for the application (or a subtree of it).\n * Exposes the current direction and a stream of direction changes.\n */\nclass Directionality {\n    /**\n     * @param {?=} _document\n     */\n    constructor(_document) {\n        /**\n         * The current 'ltr' or 'rtl' value.\n         */\n        this.value = 'ltr';\n        /**\n         * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n         */\n        this.change = new EventEmitter();\n        if (_document) {\n            // TODO: handle 'auto' value -\n            // We still need to account for dir=\"auto\".\n            // It looks like HTMLElemenet.dir is also \"auto\" when that's set to the attribute,\n            // but getComputedStyle return either \"ltr\" or \"rtl\". avoiding getComputedStyle for now\n            /** @type {?} */\n            const bodyDir = _document.body ? _document.body.dir : null;\n            /** @type {?} */\n            const htmlDir = _document.documentElement ? _document.documentElement.dir : null;\n            /** @type {?} */\n            const value = bodyDir || htmlDir;\n            this.value = (value === 'ltr' || value === 'rtl') ? value : 'ltr';\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDirectionality.ɵfac = function Directionality_Factory(t) { return new (t || Directionality)(ɵngcc0.ɵɵinject(DIR_DOCUMENT, 8)); };\n/** @nocollapse */\nDirectionality.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [DIR_DOCUMENT,] }] }\n];\n/** @nocollapse */ Directionality.ɵprov = ɵɵdefineInjectable({ factory: function Directionality_Factory() { return new Directionality(ɵɵinject(DIR_DOCUMENT, 8)); }, token: Directionality, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Directionality, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [DIR_DOCUMENT]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * The current 'ltr' or 'rtl' value.\n     * @type {?}\n     */\n    Directionality.prototype.value;\n    /**\n     * Stream that emits whenever the 'ltr' / 'rtl' state changes.\n     * @type {?}\n     */\n    Directionality.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/dir.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Directive to listen for changes of direction of part of the DOM.\n *\n * Provides itself as Directionality such that descendant directives only need to ever inject\n * Directionality to get the closest direction.\n */\nclass Dir {\n    constructor() {\n        /**\n         * Normalized direction that accounts for invalid/unsupported values.\n         */\n        this._dir = 'ltr';\n        /**\n         * Whether the `value` has been set to its initial value.\n         */\n        this._isInitialized = false;\n        /**\n         * Event emitted when the direction changes.\n         */\n        this.change = new EventEmitter();\n    }\n    /**\n     * \\@docs-private\n     * @return {?}\n     */\n    get dir() { return this._dir; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set dir(value) {\n        /** @type {?} */\n        const old = this._dir;\n        /** @type {?} */\n        const normalizedValue = value ? value.toLowerCase() : value;\n        this._rawDir = value;\n        this._dir = (normalizedValue === 'ltr' || normalizedValue === 'rtl') ? normalizedValue : 'ltr';\n        if (old !== this._dir && this._isInitialized) {\n            this.change.emit(this._dir);\n        }\n    }\n    /**\n     * Current layout direction of the element.\n     * @return {?}\n     */\n    get value() { return this.dir; }\n    /**\n     * Initialize once default value has been set.\n     * @return {?}\n     */\n    ngAfterContentInit() {\n        this._isInitialized = true;\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.change.complete();\n    }\n}\nDir.ɵfac = function Dir_Factory(t) { return new (t || Dir)(); };\nDir.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: Dir, selectors: [[\"\", \"dir\", \"\"]], hostVars: 1, hostBindings: function Dir_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵattribute(\"dir\", ctx._rawDir);\n    } }, inputs: { dir: \"dir\" }, outputs: { change: \"dirChange\" }, exportAs: [\"dir\"], features: [ɵngcc0.ɵɵProvidersFeature([{ provide: Directionality, useExisting: Dir }])] });\nDir.propDecorators = {\n    change: [{ type: Output, args: ['dirChange',] }],\n    dir: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Dir, [{\n        type: Directive,\n        args: [{\n                selector: '[dir]',\n                providers: [{ provide: Directionality, useExisting: Dir }],\n                host: { '[attr.dir]': '_rawDir' },\n                exportAs: 'dir'\n            }]\n    }], function () { return []; }, { change: [{\n            type: Output,\n            args: ['dirChange']\n        }], dir: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Normalized direction that accounts for invalid/unsupported values.\n     * @type {?}\n     * @private\n     */\n    Dir.prototype._dir;\n    /**\n     * Whether the `value` has been set to its initial value.\n     * @type {?}\n     * @private\n     */\n    Dir.prototype._isInitialized;\n    /**\n     * Direction as passed in by the consumer.\n     * @type {?}\n     */\n    Dir.prototype._rawDir;\n    /**\n     * Event emitted when the direction changes.\n     * @type {?}\n     */\n    Dir.prototype.change;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/bidi-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass BidiModule {\n}\nBidiModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: BidiModule });\nBidiModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function BidiModule_Factory(t) { return new (t || BidiModule)(); } });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(BidiModule, { declarations: [Dir], exports: [Dir] }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(BidiModule, [{\n        type: NgModule,\n        args: [{\n                exports: [Dir],\n                declarations: [Dir]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/bidi/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BidiModule, DIR_DOCUMENT, Dir, Directionality, DIR_DOCUMENT_FACTORY as ɵangular_material_src_cdk_bidi_bidi_a };\n\n//# sourceMappingURL=bidi.js.map","import { isObservable, of, Subject } from 'rxjs';\nimport { Injectable, ɵɵdefineInjectable } from '@angular/core';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @abstract\n * @template T\n */\nimport * as ɵngcc0 from '@angular/core';\nclass DataSource {\n}\nif (false) {\n    /**\n     * Connects a collection viewer (such as a data-table) to this data source. Note that\n     * the stream provided will be accessed during change detection and should not directly change\n     * values that are bound in template views.\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?} Observable that emits a new value when the data changes.\n     */\n    DataSource.prototype.connect = function (collectionViewer) { };\n    /**\n     * Disconnects a collection viewer (such as a data-table) from this data source. Can be used\n     * to perform any clean-up or tear-down operations when a view is being destroyed.\n     *\n     * @abstract\n     * @param {?} collectionViewer The component that exposes a view over the data provided by this\n     *     data source.\n     * @return {?}\n     */\n    DataSource.prototype.disconnect = function (collectionViewer) { };\n}\n/**\n * Checks whether an object is a data source.\n * @param {?} value\n * @return {?}\n */\nfunction isDataSource(value) {\n    // Check if the value is a DataSource by observing if it has a connect function. Cannot\n    // be checked as an `instanceof DataSource` since people could create their own sources\n    // that match the interface, but don't extend DataSource.\n    return value && typeof value.connect === 'function';\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/array-data-source.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * DataSource wrapper for a native array.\n * @template T\n */\nclass ArrayDataSource extends DataSource {\n    /**\n     * @param {?} _data\n     */\n    constructor(_data) {\n        super();\n        this._data = _data;\n    }\n    /**\n     * @return {?}\n     */\n    connect() {\n        return isObservable(this._data) ? this._data : of(this._data);\n    }\n    /**\n     * @return {?}\n     */\n    disconnect() { }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    ArrayDataSource.prototype._data;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/collection-viewer.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for any component that provides a view of some data collection and wants to provide\n * information regarding the view and any changes made.\n * @record\n */\nfunction CollectionViewer() { }\nif (false) {\n    /**\n     * A stream that emits whenever the `CollectionViewer` starts looking at a new portion of the\n     * data. The `start` index is inclusive, while the `end` is exclusive.\n     * @type {?}\n     */\n    CollectionViewer.prototype.viewChange;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/selection-model.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to be used to power selecting one or more options from a list.\n * @template T\n */\nclass SelectionModel {\n    /**\n     * @param {?=} _multiple\n     * @param {?=} initiallySelectedValues\n     * @param {?=} _emitChanges\n     */\n    constructor(_multiple = false, initiallySelectedValues, _emitChanges = true) {\n        this._multiple = _multiple;\n        this._emitChanges = _emitChanges;\n        /**\n         * Currently-selected values.\n         */\n        this._selection = new Set();\n        /**\n         * Keeps track of the deselected options that haven't been emitted by the change event.\n         */\n        this._deselectedToEmit = [];\n        /**\n         * Keeps track of the selected options that haven't been emitted by the change event.\n         */\n        this._selectedToEmit = [];\n        /**\n         * Event emitted when the value has changed.\n         */\n        this.changed = new Subject();\n        if (initiallySelectedValues && initiallySelectedValues.length) {\n            if (_multiple) {\n                initiallySelectedValues.forEach((/**\n                 * @param {?} value\n                 * @return {?}\n                 */\n                value => this._markSelected(value)));\n            }\n            else {\n                this._markSelected(initiallySelectedValues[0]);\n            }\n            // Clear the array in order to avoid firing the change event for preselected values.\n            this._selectedToEmit.length = 0;\n        }\n    }\n    /**\n     * Selected values.\n     * @return {?}\n     */\n    get selected() {\n        if (!this._selected) {\n            this._selected = Array.from(this._selection.values());\n        }\n        return this._selected;\n    }\n    /**\n     * Selects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    select(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._markSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Deselects a value or an array of values.\n     * @param {...?} values\n     * @return {?}\n     */\n    deselect(...values) {\n        this._verifyValueAssignment(values);\n        values.forEach((/**\n         * @param {?} value\n         * @return {?}\n         */\n        value => this._unmarkSelected(value)));\n        this._emitChangeEvent();\n    }\n    /**\n     * Toggles a value between selected and deselected.\n     * @param {?} value\n     * @return {?}\n     */\n    toggle(value) {\n        this.isSelected(value) ? this.deselect(value) : this.select(value);\n    }\n    /**\n     * Clears all of the selected values.\n     * @return {?}\n     */\n    clear() {\n        this._unmarkAll();\n        this._emitChangeEvent();\n    }\n    /**\n     * Determines whether a value is selected.\n     * @param {?} value\n     * @return {?}\n     */\n    isSelected(value) {\n        return this._selection.has(value);\n    }\n    /**\n     * Determines whether the model does not have a value.\n     * @return {?}\n     */\n    isEmpty() {\n        return this._selection.size === 0;\n    }\n    /**\n     * Determines whether the model has a value.\n     * @return {?}\n     */\n    hasValue() {\n        return !this.isEmpty();\n    }\n    /**\n     * Sorts the selected values based on a predicate function.\n     * @param {?=} predicate\n     * @return {?}\n     */\n    sort(predicate) {\n        if (this._multiple && this.selected) {\n            (/** @type {?} */ (this._selected)).sort(predicate);\n        }\n    }\n    /**\n     * Gets whether multiple values can be selected.\n     * @return {?}\n     */\n    isMultipleSelection() {\n        return this._multiple;\n    }\n    /**\n     * Emits a change event and clears the records of selected and deselected values.\n     * @private\n     * @return {?}\n     */\n    _emitChangeEvent() {\n        // Clear the selected values so they can be re-cached.\n        this._selected = null;\n        if (this._selectedToEmit.length || this._deselectedToEmit.length) {\n            this.changed.next({\n                source: this,\n                added: this._selectedToEmit,\n                removed: this._deselectedToEmit\n            });\n            this._deselectedToEmit = [];\n            this._selectedToEmit = [];\n        }\n    }\n    /**\n     * Selects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _markSelected(value) {\n        if (!this.isSelected(value)) {\n            if (!this._multiple) {\n                this._unmarkAll();\n            }\n            this._selection.add(value);\n            if (this._emitChanges) {\n                this._selectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Deselects a value.\n     * @private\n     * @param {?} value\n     * @return {?}\n     */\n    _unmarkSelected(value) {\n        if (this.isSelected(value)) {\n            this._selection.delete(value);\n            if (this._emitChanges) {\n                this._deselectedToEmit.push(value);\n            }\n        }\n    }\n    /**\n     * Clears out the selected values.\n     * @private\n     * @return {?}\n     */\n    _unmarkAll() {\n        if (!this.isEmpty()) {\n            this._selection.forEach((/**\n             * @param {?} value\n             * @return {?}\n             */\n            value => this._unmarkSelected(value)));\n        }\n    }\n    /**\n     * Verifies the value assignment and throws an error if the specified value array is\n     * including multiple values while the selection model is not supporting multiple values.\n     * @private\n     * @param {?} values\n     * @return {?}\n     */\n    _verifyValueAssignment(values) {\n        if (values.length > 1 && !this._multiple) {\n            throw getMultipleValuesInSingleSelectionError();\n        }\n    }\n}\nif (false) {\n    /**\n     * Currently-selected values.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selection;\n    /**\n     * Keeps track of the deselected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._deselectedToEmit;\n    /**\n     * Keeps track of the selected options that haven't been emitted by the change event.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selectedToEmit;\n    /**\n     * Cache for the array value of the selected items.\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._selected;\n    /**\n     * Event emitted when the value has changed.\n     * @type {?}\n     */\n    SelectionModel.prototype.changed;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._multiple;\n    /**\n     * @type {?}\n     * @private\n     */\n    SelectionModel.prototype._emitChanges;\n}\n/**\n * Event emitted when the value of a MatSelectionModel has changed.\n * \\@docs-private\n * @record\n * @template T\n */\nfunction SelectionChange() { }\nif (false) {\n    /**\n     * Model that dispatched the event.\n     * @type {?}\n     */\n    SelectionChange.prototype.source;\n    /**\n     * Options that were added to the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.added;\n    /**\n     * Options that were removed from the model.\n     * @type {?}\n     */\n    SelectionChange.prototype.removed;\n}\n/**\n * Returns an error that reports that multiple values are passed into a selection model\n * with a single value.\n * \\@docs-private\n * @return {?}\n */\nfunction getMultipleValuesInSingleSelectionError() {\n    return Error('Cannot pass multiple values into SelectionModel with single-value mode.');\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/unique-selection-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Class to coordinate unique selection based on name.\n * Intended to be consumed as an Angular service.\n * This service is needed because native radio change events are only fired on the item currently\n * being selected, and we still need to uncheck the previous selection.\n *\n * This service does not *store* any IDs and names because they may change at any time, so it is\n * less error-prone if they are simply passed through when the events occur.\n */\nclass UniqueSelectionDispatcher {\n    constructor() {\n        this._listeners = [];\n    }\n    /**\n     * Notify other items that selection for the given name has been set.\n     * @param {?} id ID of the item.\n     * @param {?} name Name of the item.\n     * @return {?}\n     */\n    notify(id, name) {\n        for (let listener of this._listeners) {\n            listener(id, name);\n        }\n    }\n    /**\n     * Listen for future changes to item selection.\n     * @param {?} listener\n     * @return {?} Function used to deregister listener\n     */\n    listen(listener) {\n        this._listeners.push(listener);\n        return (/**\n         * @return {?}\n         */\n        () => {\n            this._listeners = this._listeners.filter((/**\n             * @param {?} registered\n             * @return {?}\n             */\n            (registered) => {\n                return listener !== registered;\n            }));\n        });\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._listeners = [];\n    }\n}\nUniqueSelectionDispatcher.ɵfac = function UniqueSelectionDispatcher_Factory(t) { return new (t || UniqueSelectionDispatcher)(); };\n/** @nocollapse */ UniqueSelectionDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function UniqueSelectionDispatcher_Factory() { return new UniqueSelectionDispatcher(); }, token: UniqueSelectionDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(UniqueSelectionDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return []; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    UniqueSelectionDispatcher.prototype._listeners;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/tree-adapter.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Interface for a class that can flatten hierarchical structured data and re-expand the flattened\n * data back into its original structure. Should be used in conjunction with the cdk-tree.\n * @record\n * @template T\n */\nfunction TreeDataNodeFlattener() { }\nif (false) {\n    /**\n     * Transforms a set of hierarchical structured data into a flattened data array.\n     * @param {?} structuredData\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.flattenNodes = function (structuredData) { };\n    /**\n     * Expands a flattened array of data into its hierarchical form using the provided expansion\n     * model.\n     * @param {?} nodes\n     * @param {?} expansionModel\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.expandFlattenedNodes = function (nodes, expansionModel) { };\n    /**\n     * Put node descendants of node in array.\n     * If `onlyExpandable` is true, then only process expandable descendants.\n     * @param {?} node\n     * @param {?} nodes\n     * @param {?} onlyExpandable\n     * @return {?}\n     */\n    TreeDataNodeFlattener.prototype.nodeDescendents = function (node, nodes, onlyExpandable) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/collections/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ArrayDataSource, DataSource, SelectionModel, UniqueSelectionDispatcher, getMultipleValuesInSingleSelectionError, isDataSource };\n\n//# sourceMappingURL=collections.js.map","import { Injectable, Optional, Inject, PLATFORM_ID, ɵɵdefineInjectable, ɵɵinject, NgModule } from '@angular/core';\nimport { isPlatformBrowser } from '@angular/common';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n// Whether the current platform supports the V8 Break Iterator. The V8 check\n// is necessary to detect all Blink based browsers.\n/** @type {?} */\nimport * as ɵngcc0 from '@angular/core';\nlet hasV8BreakIterator;\n// We need a try/catch around the reference to `Intl`, because accessing it in some cases can\n// cause IE to throw. These cases are tied to particular versions of Windows and can happen if\n// the consumer is providing a polyfilled `Map`. See:\n// https://github.com/Microsoft/ChakraCore/issues/3189\n// https://github.com/angular/components/issues/15687\ntry {\n    hasV8BreakIterator = (typeof Intl !== 'undefined' && ((/** @type {?} */ (Intl))).v8BreakIterator);\n}\ncatch (_a) {\n    hasV8BreakIterator = false;\n}\n/**\n * Service to detect the current platform by comparing the userAgent strings and\n * checking browser-specific global properties.\n */\nclass Platform {\n    /**\n     * \\@breaking-change 8.0.0 remove optional decorator\n     * @param {?=} _platformId\n     */\n    constructor(_platformId) {\n        this._platformId = _platformId;\n        // We want to use the Angular platform check because if the Document is shimmed\n        // without the navigator, the following checks will fail. This is preferred because\n        // sometimes the Document may be shimmed without the user's knowledge or intention\n        /**\n         * Whether the Angular application is being rendered in the browser.\n         */\n        this.isBrowser = this._platformId ?\n            isPlatformBrowser(this._platformId) : typeof document === 'object' && !!document;\n        /**\n         * Whether the current browser is Microsoft Edge.\n         */\n        this.EDGE = this.isBrowser && /(edge)/i.test(navigator.userAgent);\n        /**\n         * Whether the current rendering engine is Microsoft Trident.\n         */\n        this.TRIDENT = this.isBrowser && /(msie|trident)/i.test(navigator.userAgent);\n        // EdgeHTML and Trident mock Blink specific things and need to be excluded from this check.\n        /**\n         * Whether the current rendering engine is Blink.\n         */\n        this.BLINK = this.isBrowser && (!!(((/** @type {?} */ (window))).chrome || hasV8BreakIterator) &&\n            typeof CSS !== 'undefined' && !this.EDGE && !this.TRIDENT);\n        // Webkit is part of the userAgent in EdgeHTML, Blink and Trident. Therefore we need to\n        // ensure that Webkit runs standalone and is not used as another engine's base.\n        /**\n         * Whether the current rendering engine is WebKit.\n         */\n        this.WEBKIT = this.isBrowser &&\n            /AppleWebKit/i.test(navigator.userAgent) && !this.BLINK && !this.EDGE && !this.TRIDENT;\n        /**\n         * Whether the current platform is Apple iOS.\n         */\n        this.IOS = this.isBrowser && /iPad|iPhone|iPod/.test(navigator.userAgent) &&\n            !('MSStream' in window);\n        // It's difficult to detect the plain Gecko engine, because most of the browsers identify\n        // them self as Gecko-like browsers and modify the userAgent's according to that.\n        // Since we only cover one explicit Firefox case, we can simply check for Firefox\n        // instead of having an unstable check for Gecko.\n        /**\n         * Whether the current browser is Firefox.\n         */\n        this.FIREFOX = this.isBrowser && /(firefox|minefield)/i.test(navigator.userAgent);\n        /**\n         * Whether the current platform is Android.\n         */\n        // Trident on mobile adds the android platform to the userAgent to trick detections.\n        this.ANDROID = this.isBrowser && /android/i.test(navigator.userAgent) && !this.TRIDENT;\n        // Safari browsers will include the Safari keyword in their userAgent. Some browsers may fake\n        // this and just place the Safari keyword in the userAgent. To be more safe about Safari every\n        // Safari browser should also use Webkit as its layout engine.\n        /**\n         * Whether the current browser is Safari.\n         */\n        this.SAFARI = this.isBrowser && /safari/i.test(navigator.userAgent) && this.WEBKIT;\n    }\n}\nPlatform.ɵfac = function Platform_Factory(t) { return new (t || Platform)(ɵngcc0.ɵɵinject(PLATFORM_ID, 8)); };\n/** @nocollapse */\nPlatform.ctorParameters = () => [\n    { type: Object, decorators: [{ type: Optional }, { type: Inject, args: [PLATFORM_ID,] }] }\n];\n/** @nocollapse */ Platform.ɵprov = ɵɵdefineInjectable({ factory: function Platform_Factory() { return new Platform(ɵɵinject(PLATFORM_ID, 8)); }, token: Platform, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(Platform, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: Object, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [PLATFORM_ID]\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * Whether the Angular application is being rendered in the browser.\n     * @type {?}\n     */\n    Platform.prototype.isBrowser;\n    /**\n     * Whether the current browser is Microsoft Edge.\n     * @type {?}\n     */\n    Platform.prototype.EDGE;\n    /**\n     * Whether the current rendering engine is Microsoft Trident.\n     * @type {?}\n     */\n    Platform.prototype.TRIDENT;\n    /**\n     * Whether the current rendering engine is Blink.\n     * @type {?}\n     */\n    Platform.prototype.BLINK;\n    /**\n     * Whether the current rendering engine is WebKit.\n     * @type {?}\n     */\n    Platform.prototype.WEBKIT;\n    /**\n     * Whether the current platform is Apple iOS.\n     * @type {?}\n     */\n    Platform.prototype.IOS;\n    /**\n     * Whether the current browser is Firefox.\n     * @type {?}\n     */\n    Platform.prototype.FIREFOX;\n    /**\n     * Whether the current platform is Android.\n     * @type {?}\n     */\n    Platform.prototype.ANDROID;\n    /**\n     * Whether the current browser is Safari.\n     * @type {?}\n     */\n    Platform.prototype.SAFARI;\n    /**\n     * @type {?}\n     * @private\n     */\n    Platform.prototype._platformId;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/platform-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass PlatformModule {\n}\nPlatformModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: PlatformModule });\nPlatformModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function PlatformModule_Factory(t) { return new (t || PlatformModule)(); } });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(PlatformModule, [{\n        type: NgModule,\n        args: [{}]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/input-types.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result Set of input types support by the current browser.\n * @type {?}\n */\nlet supportedInputTypes;\n/**\n * Types of `<input>` that *might* be supported.\n * @type {?}\n */\nconst candidateInputTypes = [\n    // `color` must come first. Chrome 56 shows a warning if we change the type to `color` after\n    // first changing it to something else:\n    // The specified value \"\" does not conform to the required format.\n    // The format is \"#rrggbb\" where rr, gg, bb are two-digit hexadecimal numbers.\n    'color',\n    'button',\n    'checkbox',\n    'date',\n    'datetime-local',\n    'email',\n    'file',\n    'hidden',\n    'image',\n    'month',\n    'number',\n    'password',\n    'radio',\n    'range',\n    'reset',\n    'search',\n    'submit',\n    'tel',\n    'text',\n    'time',\n    'url',\n    'week',\n];\n/**\n * @return {?} The input types supported by this browser.\n */\nfunction getSupportedInputTypes() {\n    // Result is cached.\n    if (supportedInputTypes) {\n        return supportedInputTypes;\n    }\n    // We can't check if an input type is not supported until we're on the browser, so say that\n    // everything is supported when not on the browser. We don't use `Platform` here since it's\n    // just a helper function and can't inject it.\n    if (typeof document !== 'object' || !document) {\n        supportedInputTypes = new Set(candidateInputTypes);\n        return supportedInputTypes;\n    }\n    /** @type {?} */\n    let featureTestInput = document.createElement('input');\n    supportedInputTypes = new Set(candidateInputTypes.filter((/**\n     * @param {?} value\n     * @return {?}\n     */\n    value => {\n        featureTestInput.setAttribute('type', value);\n        return featureTestInput.type === value;\n    })));\n    return supportedInputTypes;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/passive-listeners.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cached result of whether the user's browser supports passive event listeners.\n * @type {?}\n */\nlet supportsPassiveEvents;\n/**\n * Checks whether the user's browser supports passive event listeners.\n * See: https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md\n * @return {?}\n */\nfunction supportsPassiveEventListeners() {\n    if (supportsPassiveEvents == null && typeof window !== 'undefined') {\n        try {\n            window.addEventListener('test', (/** @type {?} */ (null)), Object.defineProperty({}, 'passive', {\n                get: (/**\n                 * @return {?}\n                 */\n                () => supportsPassiveEvents = true)\n            }));\n        }\n        finally {\n            supportsPassiveEvents = supportsPassiveEvents || false;\n        }\n    }\n    return supportsPassiveEvents;\n}\n/**\n * Normalizes an `AddEventListener` object to something that can be passed\n * to `addEventListener` on any browser, no matter whether it supports the\n * `options` parameter.\n * @param {?} options Object to be normalized.\n * @return {?}\n */\nfunction normalizePassiveListenerOptions(options) {\n    return supportsPassiveEventListeners() ? options : !!options.capture;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/scrolling.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @enum {number} */\nconst RtlScrollAxisType = {\n    /**\n     * scrollLeft is 0 when scrolled all the way left and (scrollWidth - clientWidth) when scrolled\n     * all the way right.\n     */\n    NORMAL: 0,\n    /**\n     * scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    NEGATED: 1,\n    /**\n     * scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and 0 when scrolled\n     * all the way right.\n     */\n    INVERTED: 2,\n};\n/**\n * Cached result of the way the browser handles the horizontal scroll axis in RTL mode.\n * @type {?}\n */\nlet rtlScrollAxisType;\n/**\n * Check whether the browser supports scroll behaviors.\n * @return {?}\n */\nfunction supportsScrollBehavior() {\n    return !!(typeof document == 'object' && 'scrollBehavior' in (/** @type {?} */ (document.documentElement)).style);\n}\n/**\n * Checks the type of RTL scroll axis used by this browser. As of time of writing, Chrome is NORMAL,\n * Firefox & Safari are NEGATED, and IE & Edge are INVERTED.\n * @return {?}\n */\nfunction getRtlScrollAxisType() {\n    // We can't check unless we're on the browser. Just assume 'normal' if we're not.\n    if (typeof document !== 'object' || !document) {\n        return 0 /* NORMAL */;\n    }\n    if (rtlScrollAxisType == null) {\n        // Create a 1px wide scrolling container and a 2px wide content element.\n        /** @type {?} */\n        const scrollContainer = document.createElement('div');\n        /** @type {?} */\n        const containerStyle = scrollContainer.style;\n        scrollContainer.dir = 'rtl';\n        containerStyle.height = '1px';\n        containerStyle.width = '1px';\n        containerStyle.overflow = 'auto';\n        containerStyle.visibility = 'hidden';\n        containerStyle.pointerEvents = 'none';\n        containerStyle.position = 'absolute';\n        /** @type {?} */\n        const content = document.createElement('div');\n        /** @type {?} */\n        const contentStyle = content.style;\n        contentStyle.width = '2px';\n        contentStyle.height = '1px';\n        scrollContainer.appendChild(content);\n        document.body.appendChild(scrollContainer);\n        rtlScrollAxisType = 0 /* NORMAL */;\n        // The viewport starts scrolled all the way to the right in RTL mode. If we are in a NORMAL\n        // browser this would mean that the scrollLeft should be 1. If it's zero instead we know we're\n        // dealing with one of the other two types of browsers.\n        if (scrollContainer.scrollLeft === 0) {\n            // In a NEGATED browser the scrollLeft is always somewhere in [-maxScrollAmount, 0]. For an\n            // INVERTED browser it is always somewhere in [0, maxScrollAmount]. We can determine which by\n            // setting to the scrollLeft to 1. This is past the max for a NEGATED browser, so it will\n            // return 0 when we read it again.\n            scrollContainer.scrollLeft = 1;\n            rtlScrollAxisType =\n                scrollContainer.scrollLeft === 0 ? 1 /* NEGATED */ : 2 /* INVERTED */;\n        }\n        (/** @type {?} */ (scrollContainer.parentNode)).removeChild(scrollContainer);\n    }\n    return rtlScrollAxisType;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/features/shadow-dom.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @type {?} */\nlet shadowDomIsSupported;\n/**\n * Checks whether the user's browser support Shadow DOM.\n * @return {?}\n */\nfunction _supportsShadowDom() {\n    if (shadowDomIsSupported == null) {\n        /** @type {?} */\n        const head = typeof document !== 'undefined' ? document.head : null;\n        shadowDomIsSupported = !!(head && (((/** @type {?} */ (head))).createShadowRoot || head.attachShadow));\n    }\n    return shadowDomIsSupported;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/platform/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Platform, PlatformModule, _supportsShadowDom, getRtlScrollAxisType, getSupportedInputTypes, normalizePassiveListenerOptions, supportsPassiveEventListeners, supportsScrollBehavior };\n\n//# sourceMappingURL=platform.js.map","import { coerceNumberProperty } from '@angular/cdk/coercion';\nimport { InjectionToken, Directive, forwardRef, Input, Injectable, NgZone, ɵɵdefineInjectable, ɵɵinject, ElementRef, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ChangeDetectorRef, Inject, Output, ViewChild, ViewContainerRef, TemplateRef, IterableDiffers, SkipSelf, NgModule } from '@angular/core';\nimport { Subject, of, Observable, fromEvent, merge, animationFrameScheduler, asapScheduler, Subscription, isObservable } from 'rxjs';\nimport { distinctUntilChanged, auditTime, filter, takeUntil, startWith, pairwise, switchMap, shareReplay } from 'rxjs/operators';\nimport { Platform, getRtlScrollAxisType, supportsScrollBehavior, PlatformModule } from '@angular/cdk/platform';\nimport { Directionality, BidiModule } from '@angular/cdk/bidi';\nimport { isDataSource, ArrayDataSource } from '@angular/cdk/collections';\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-strategy.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * The injection token used to specify the virtual scrolling strategy.\n * @type {?}\n */\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/cdk/platform';\nimport * as ɵngcc2 from '@angular/cdk/bidi';\n\nconst _c0 = [\"contentWrapper\"];\nconst _c1 = [\"*\"];\nconst VIRTUAL_SCROLL_STRATEGY = new InjectionToken('VIRTUAL_SCROLL_STRATEGY');\n/**\n * A strategy that dictates which items should be rendered in the viewport.\n * @record\n */\nfunction VirtualScrollStrategy() { }\nif (false) {\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    VirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.attach = function (viewport) { };\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.detach = function () { };\n    /**\n     * Called when the viewport is scrolled (debounced using requestAnimationFrame).\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentScrolled = function () { };\n    /**\n     * Called when the length of the data changes.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onDataLengthChanged = function () { };\n    /**\n     * Called when the range of items rendered in the DOM has changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onContentRendered = function () { };\n    /**\n     * Called when the offset of the rendered items changed.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.onRenderedOffsetChanged = function () { };\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    VirtualScrollStrategy.prototype.scrollToIndex = function (index, behavior) { };\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/fixed-size-virtual-scroll.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Virtual scrolling strategy for lists with items of known fixed size.\n */\nclass FixedSizeVirtualScrollStrategy {\n    /**\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     */\n    constructor(itemSize, minBufferPx, maxBufferPx) {\n        this._scrolledIndexChange = new Subject();\n        /**\n         * \\@docs-private Implemented as part of VirtualScrollStrategy.\n         */\n        this.scrolledIndexChange = this._scrolledIndexChange.pipe(distinctUntilChanged());\n        /**\n         * The attached viewport.\n         */\n        this._viewport = null;\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n    }\n    /**\n     * Attaches this scroll strategy to a viewport.\n     * @param {?} viewport The viewport to attach this strategy to.\n     * @return {?}\n     */\n    attach(viewport) {\n        this._viewport = viewport;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * Detaches this scroll strategy from the currently attached viewport.\n     * @return {?}\n     */\n    detach() {\n        this._scrolledIndexChange.complete();\n        this._viewport = null;\n    }\n    /**\n     * Update the item size and buffer size.\n     * @param {?} itemSize The size of the items in the virtually scrolling list.\n     * @param {?} minBufferPx The minimum amount of buffer (in pixels) before needing to render more\n     * @param {?} maxBufferPx The amount of buffer (in pixels) to render when rendering more.\n     * @return {?}\n     */\n    updateItemAndBufferSize(itemSize, minBufferPx, maxBufferPx) {\n        if (maxBufferPx < minBufferPx) {\n            throw Error('CDK virtual scroll: maxBufferPx must be greater than or equal to minBufferPx');\n        }\n        this._itemSize = itemSize;\n        this._minBufferPx = minBufferPx;\n        this._maxBufferPx = maxBufferPx;\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentScrolled() {\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onDataLengthChanged() {\n        this._updateTotalContentSize();\n        this._updateRenderedRange();\n    }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onContentRendered() { }\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @return {?}\n     */\n    onRenderedOffsetChanged() { }\n    /**\n     * Scroll to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?} behavior The ScrollBehavior to use when scrolling.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior) {\n        if (this._viewport) {\n            this._viewport.scrollToOffset(index * this._itemSize, behavior);\n        }\n    }\n    /**\n     * Update the viewport's total content size.\n     * @private\n     * @return {?}\n     */\n    _updateTotalContentSize() {\n        if (!this._viewport) {\n            return;\n        }\n        this._viewport.setTotalContentSize(this._viewport.getDataLength() * this._itemSize);\n    }\n    /**\n     * Update the viewport's rendered range.\n     * @private\n     * @return {?}\n     */\n    _updateRenderedRange() {\n        if (!this._viewport) {\n            return;\n        }\n        /** @type {?} */\n        const scrollOffset = this._viewport.measureScrollOffset();\n        /** @type {?} */\n        const firstVisibleIndex = scrollOffset / this._itemSize;\n        /** @type {?} */\n        const renderedRange = this._viewport.getRenderedRange();\n        /** @type {?} */\n        const newRange = { start: renderedRange.start, end: renderedRange.end };\n        /** @type {?} */\n        const viewportSize = this._viewport.getViewportSize();\n        /** @type {?} */\n        const dataLength = this._viewport.getDataLength();\n        /** @type {?} */\n        const startBuffer = scrollOffset - newRange.start * this._itemSize;\n        if (startBuffer < this._minBufferPx && newRange.start != 0) {\n            /** @type {?} */\n            const expandStart = Math.ceil((this._maxBufferPx - startBuffer) / this._itemSize);\n            newRange.start = Math.max(0, newRange.start - expandStart);\n            newRange.end = Math.min(dataLength, Math.ceil(firstVisibleIndex + (viewportSize + this._minBufferPx) / this._itemSize));\n        }\n        else {\n            /** @type {?} */\n            const endBuffer = newRange.end * this._itemSize - (scrollOffset + viewportSize);\n            if (endBuffer < this._minBufferPx && newRange.end != dataLength) {\n                /** @type {?} */\n                const expandEnd = Math.ceil((this._maxBufferPx - endBuffer) / this._itemSize);\n                if (expandEnd > 0) {\n                    newRange.end = Math.min(dataLength, newRange.end + expandEnd);\n                    newRange.start = Math.max(0, Math.floor(firstVisibleIndex - this._minBufferPx / this._itemSize));\n                }\n            }\n        }\n        this._viewport.setRenderedRange(newRange);\n        this._viewport.setRenderedContentOffset(this._itemSize * newRange.start);\n        this._scrolledIndexChange.next(Math.floor(firstVisibleIndex));\n    }\n}\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._scrolledIndexChange;\n    /**\n     * \\@docs-private Implemented as part of VirtualScrollStrategy.\n     * @type {?}\n     */\n    FixedSizeVirtualScrollStrategy.prototype.scrolledIndexChange;\n    /**\n     * The attached viewport.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._viewport;\n    /**\n     * The size of the items in the virtually scrolling list.\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._itemSize;\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._minBufferPx;\n    /**\n     * The number of buffer items to render beyond the edge of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    FixedSizeVirtualScrollStrategy.prototype._maxBufferPx;\n}\n/**\n * Provider factory for `FixedSizeVirtualScrollStrategy` that simply extracts the already created\n * `FixedSizeVirtualScrollStrategy` from the given directive.\n * @param {?} fixedSizeDir The instance of `CdkFixedSizeVirtualScroll` to extract the\n *     `FixedSizeVirtualScrollStrategy` from.\n * @return {?}\n */\nfunction _fixedSizeVirtualScrollStrategyFactory(fixedSizeDir) {\n    return fixedSizeDir._scrollStrategy;\n}\n/**\n * A virtual scroll strategy that supports fixed-size items.\n */\nclass CdkFixedSizeVirtualScroll {\n    constructor() {\n        this._itemSize = 20;\n        this._minBufferPx = 100;\n        this._maxBufferPx = 200;\n        /**\n         * The scroll strategy used by this directive.\n         */\n        this._scrollStrategy = new FixedSizeVirtualScrollStrategy(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n    /**\n     * The size of the items in the list (in pixels).\n     * @return {?}\n     */\n    get itemSize() { return this._itemSize; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set itemSize(value) { this._itemSize = coerceNumberProperty(value); }\n    /**\n     * The minimum amount of buffer rendered beyond the viewport (in pixels).\n     * If the amount of buffer dips below this number, more items will be rendered. Defaults to 100px.\n     * @return {?}\n     */\n    get minBufferPx() { return this._minBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set minBufferPx(value) { this._minBufferPx = coerceNumberProperty(value); }\n    /**\n     * The number of pixels worth of buffer to render for when rendering new items. Defaults to 200px.\n     * @return {?}\n     */\n    get maxBufferPx() { return this._maxBufferPx; }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set maxBufferPx(value) { this._maxBufferPx = coerceNumberProperty(value); }\n    /**\n     * @return {?}\n     */\n    ngOnChanges() {\n        this._scrollStrategy.updateItemAndBufferSize(this.itemSize, this.minBufferPx, this.maxBufferPx);\n    }\n}\nCdkFixedSizeVirtualScroll.ɵfac = function CdkFixedSizeVirtualScroll_Factory(t) { return new (t || CdkFixedSizeVirtualScroll)(); };\nCdkFixedSizeVirtualScroll.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkFixedSizeVirtualScroll, selectors: [[\"cdk-virtual-scroll-viewport\", \"itemSize\", \"\"]], inputs: { itemSize: \"itemSize\", minBufferPx: \"minBufferPx\", maxBufferPx: \"maxBufferPx\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: VIRTUAL_SCROLL_STRATEGY,\n                useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                deps: [forwardRef(( /**\n                         * @return {?}\n                         */() => CdkFixedSizeVirtualScroll))]\n            }]), ɵngcc0.ɵɵNgOnChangesFeature()] });\nCdkFixedSizeVirtualScroll.propDecorators = {\n    itemSize: [{ type: Input }],\n    minBufferPx: [{ type: Input }],\n    maxBufferPx: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkFixedSizeVirtualScroll, [{\n        type: Directive,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport[itemSize]',\n                providers: [{\n                        provide: VIRTUAL_SCROLL_STRATEGY,\n                        useFactory: _fixedSizeVirtualScrollStrategyFactory,\n                        deps: [forwardRef(( /**\n                                 * @return {?}\n                                 */() => CdkFixedSizeVirtualScroll))]\n                    }]\n            }]\n    }], function () { return []; }, { itemSize: [{\n            type: Input\n        }], minBufferPx: [{\n            type: Input\n        }], maxBufferPx: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.ngAcceptInputType_maxBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._itemSize;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._minBufferPx;\n    /** @type {?} */\n    CdkFixedSizeVirtualScroll.prototype._maxBufferPx;\n    /**\n     * The scroll strategy used by this directive.\n     * @type {?}\n     */\n    CdkFixedSizeVirtualScroll.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scroll-dispatcher.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the scrolling events by default.\n * @type {?}\n */\nconst DEFAULT_SCROLL_TIME = 20;\n/**\n * Service contained all registered Scrollable references and emits an event when any one of the\n * Scrollable references emit a scrolled event.\n */\nclass ScrollDispatcher {\n    /**\n     * @param {?} _ngZone\n     * @param {?} _platform\n     */\n    constructor(_ngZone, _platform) {\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        /**\n         * Subject for notifying that a registered scrollable reference element has been scrolled.\n         */\n        this._scrolled = new Subject();\n        /**\n         * Keeps track of the global `scroll` and `resize` subscriptions.\n         */\n        this._globalSubscription = null;\n        /**\n         * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n         */\n        this._scrolledCount = 0;\n        /**\n         * Map of all the scrollable references that are registered with the service and their\n         * scroll event subscriptions.\n         */\n        this.scrollContainers = new Map();\n    }\n    /**\n     * Registers a scrollable instance with the service and listens for its scrolled events. When the\n     * scrollable is scrolled, the service emits the event to its scrolled observable.\n     * @param {?} scrollable Scrollable instance to be registered.\n     * @return {?}\n     */\n    register(scrollable) {\n        if (!this.scrollContainers.has(scrollable)) {\n            this.scrollContainers.set(scrollable, scrollable.elementScrolled()\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next(scrollable))));\n        }\n    }\n    /**\n     * Deregisters a Scrollable reference and unsubscribes from its scroll event observable.\n     * @param {?} scrollable Scrollable instance to be deregistered.\n     * @return {?}\n     */\n    deregister(scrollable) {\n        /** @type {?} */\n        const scrollableReference = this.scrollContainers.get(scrollable);\n        if (scrollableReference) {\n            scrollableReference.unsubscribe();\n            this.scrollContainers.delete(scrollable);\n        }\n    }\n    /**\n     * Returns an observable that emits an event whenever any of the registered Scrollable\n     * references (or window, document, or body) fire a scrolled event. Can provide a time in ms\n     * to override the default \"throttle\" time.\n     *\n     * **Note:** in order to avoid hitting change detection for every scroll event,\n     * all of the events emitted from this stream will be run outside the Angular zone.\n     * If you need to update any data bindings as a result of a scroll event, you have\n     * to run the callback using `NgZone.run`.\n     * @param {?=} auditTimeInMs\n     * @return {?}\n     */\n    scrolled(auditTimeInMs = DEFAULT_SCROLL_TIME) {\n        if (!this._platform.isBrowser) {\n            return of();\n        }\n        return new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => {\n            if (!this._globalSubscription) {\n                this._addGlobalListener();\n            }\n            // In the case of a 0ms delay, use an observable without auditTime\n            // since it does add a perceptible delay in processing overhead.\n            /** @type {?} */\n            const subscription = auditTimeInMs > 0 ?\n                this._scrolled.pipe(auditTime(auditTimeInMs)).subscribe(observer) :\n                this._scrolled.subscribe(observer);\n            this._scrolledCount++;\n            return (/**\n             * @return {?}\n             */\n            () => {\n                subscription.unsubscribe();\n                this._scrolledCount--;\n                if (!this._scrolledCount) {\n                    this._removeGlobalListener();\n                }\n            });\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._removeGlobalListener();\n        this.scrollContainers.forEach((/**\n         * @param {?} _\n         * @param {?} container\n         * @return {?}\n         */\n        (_, container) => this.deregister(container)));\n        this._scrolled.complete();\n    }\n    /**\n     * Returns an observable that emits whenever any of the\n     * scrollable ancestors of an element are scrolled.\n     * @param {?} elementRef Element whose ancestors to listen for.\n     * @param {?=} auditTimeInMs Time to throttle the scroll events.\n     * @return {?}\n     */\n    ancestorScrolled(elementRef, auditTimeInMs) {\n        /** @type {?} */\n        const ancestors = this.getAncestorScrollContainers(elementRef);\n        return this.scrolled(auditTimeInMs).pipe(filter((/**\n         * @param {?} target\n         * @return {?}\n         */\n        target => {\n            return !target || ancestors.indexOf(target) > -1;\n        })));\n    }\n    /**\n     * Returns all registered Scrollables that contain the provided element.\n     * @param {?} elementRef\n     * @return {?}\n     */\n    getAncestorScrollContainers(elementRef) {\n        /** @type {?} */\n        const scrollingContainers = [];\n        this.scrollContainers.forEach((/**\n         * @param {?} _subscription\n         * @param {?} scrollable\n         * @return {?}\n         */\n        (_subscription, scrollable) => {\n            if (this._scrollableContainsElement(scrollable, elementRef)) {\n                scrollingContainers.push(scrollable);\n            }\n        }));\n        return scrollingContainers;\n    }\n    /**\n     * Returns true if the element is contained within the provided Scrollable.\n     * @private\n     * @param {?} scrollable\n     * @param {?} elementRef\n     * @return {?}\n     */\n    _scrollableContainsElement(scrollable, elementRef) {\n        /** @type {?} */\n        let element = elementRef.nativeElement;\n        /** @type {?} */\n        let scrollableElement = scrollable.getElementRef().nativeElement;\n        // Traverse through the element parents until we reach null, checking if any of the elements\n        // are the scrollable's element.\n        do {\n            if (element == scrollableElement) {\n                return true;\n            }\n        } while (element = (/** @type {?} */ (element)).parentElement);\n        return false;\n    }\n    /**\n     * Sets up the global scroll listeners.\n     * @private\n     * @return {?}\n     */\n    _addGlobalListener() {\n        this._globalSubscription = this._ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            return fromEvent(window.document, 'scroll').subscribe((/**\n             * @return {?}\n             */\n            () => this._scrolled.next()));\n        }));\n    }\n    /**\n     * Cleans up the global scroll listener.\n     * @private\n     * @return {?}\n     */\n    _removeGlobalListener() {\n        if (this._globalSubscription) {\n            this._globalSubscription.unsubscribe();\n            this._globalSubscription = null;\n        }\n    }\n}\nScrollDispatcher.ɵfac = function ScrollDispatcher_Factory(t) { return new (t || ScrollDispatcher)(ɵngcc0.ɵɵinject(ɵngcc0.NgZone), ɵngcc0.ɵɵinject(ɵngcc1.Platform)); };\n/** @nocollapse */\nScrollDispatcher.ctorParameters = () => [\n    { type: NgZone },\n    { type: Platform }\n];\n/** @nocollapse */ ScrollDispatcher.ɵprov = ɵɵdefineInjectable({ factory: function ScrollDispatcher_Factory() { return new ScrollDispatcher(ɵɵinject(NgZone), ɵɵinject(Platform)); }, token: ScrollDispatcher, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollDispatcher, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc0.NgZone }, { type: ɵngcc1.Platform }]; }, null); })();\nif (false) {\n    /**\n     * Subject for notifying that a registered scrollable reference element has been scrolled.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolled;\n    /**\n     * Keeps track of the global `scroll` and `resize` subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype._globalSubscription;\n    /**\n     * Keeps track of the amount of subscriptions to `scrolled`. Used for cleaning up afterwards.\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._scrolledCount;\n    /**\n     * Map of all the scrollable references that are registered with the service and their\n     * scroll event subscriptions.\n     * @type {?}\n     */\n    ScrollDispatcher.prototype.scrollContainers;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._ngZone;\n    /**\n     * @type {?}\n     * @private\n     */\n    ScrollDispatcher.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrollable.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Sends an event when the directive's element is scrolled. Registers itself with the\n * ScrollDispatcher service to include itself as part of its collection of scrolling events that it\n * can be listened to through the service.\n */\nclass CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} scrollDispatcher\n     * @param {?} ngZone\n     * @param {?=} dir\n     */\n    constructor(elementRef, scrollDispatcher, ngZone, dir) {\n        this.elementRef = elementRef;\n        this.scrollDispatcher = scrollDispatcher;\n        this.ngZone = ngZone;\n        this.dir = dir;\n        this._destroyed = new Subject();\n        this._elementScrolled = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => fromEvent(this.elementRef.nativeElement, 'scroll').pipe(takeUntil(this._destroyed))\n            .subscribe(observer)))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        this.scrollDispatcher.register(this);\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.scrollDispatcher.deregister(this);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Returns observable that emits when a scroll event is fired on the host element.\n     * @return {?}\n     */\n    elementScrolled() {\n        return this._elementScrolled;\n    }\n    /**\n     * Gets the ElementRef for the viewport.\n     * @return {?}\n     */\n    getElementRef() {\n        return this.elementRef;\n    }\n    /**\n     * Scrolls to the specified offsets. This is a normalized version of the browser's native scrollTo\n     * method, since browsers are not consistent about what scrollLeft means in RTL. For this method\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} options specified the offsets to scroll to.\n     * @return {?}\n     */\n    scrollTo(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        // Rewrite start & end offsets as right or left offsets.\n        if (options.left == null) {\n            options.left = isRtl ? options.end : options.start;\n        }\n        if (options.right == null) {\n            options.right = isRtl ? options.start : options.end;\n        }\n        // Rewrite the bottom offset as a top offset.\n        if (options.bottom != null) {\n            ((/** @type {?} */ (options))).top =\n                el.scrollHeight - el.clientHeight - options.bottom;\n        }\n        // Rewrite the right offset as a left offset.\n        if (isRtl && getRtlScrollAxisType() != 0 /* NORMAL */) {\n            if (options.left != null) {\n                ((/** @type {?} */ (options))).right =\n                    el.scrollWidth - el.clientWidth - options.left;\n            }\n            if (getRtlScrollAxisType() == 2 /* INVERTED */) {\n                options.left = options.right;\n            }\n            else if (getRtlScrollAxisType() == 1 /* NEGATED */) {\n                options.left = options.right ? -options.right : options.right;\n            }\n        }\n        else {\n            if (options.right != null) {\n                ((/** @type {?} */ (options))).left =\n                    el.scrollWidth - el.clientWidth - options.right;\n            }\n        }\n        this._applyScrollToOptions(options);\n    }\n    /**\n     * @private\n     * @param {?} options\n     * @return {?}\n     */\n    _applyScrollToOptions(options) {\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (supportsScrollBehavior()) {\n            el.scrollTo(options);\n        }\n        else {\n            if (options.top != null) {\n                el.scrollTop = options.top;\n            }\n            if (options.left != null) {\n                el.scrollLeft = options.left;\n            }\n        }\n    }\n    /**\n     * Measures the scroll offset relative to the specified edge of the viewport. This method can be\n     * used instead of directly checking scrollLeft or scrollTop, since browsers are not consistent\n     * about what scrollLeft means in RTL. The values returned by this method are normalized such that\n     * left and right always refer to the left and right side of the scrolling container irrespective\n     * of the layout direction. start and end refer to left and right in an LTR context and vice-versa\n     * in an RTL context.\n     * @param {?} from The edge to measure from.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        /** @type {?} */\n        const LEFT = 'left';\n        /** @type {?} */\n        const RIGHT = 'right';\n        /** @type {?} */\n        const el = this.elementRef.nativeElement;\n        if (from == 'top') {\n            return el.scrollTop;\n        }\n        if (from == 'bottom') {\n            return el.scrollHeight - el.clientHeight - el.scrollTop;\n        }\n        // Rewrite start & end as left or right offsets.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        if (from == 'start') {\n            from = isRtl ? RIGHT : LEFT;\n        }\n        else if (from == 'end') {\n            from = isRtl ? LEFT : RIGHT;\n        }\n        if (isRtl && getRtlScrollAxisType() == 2 /* INVERTED */) {\n            // For INVERTED, scrollLeft is (scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n            else {\n                return el.scrollLeft;\n            }\n        }\n        else if (isRtl && getRtlScrollAxisType() == 1 /* NEGATED */) {\n            // For NEGATED, scrollLeft is -(scrollWidth - clientWidth) when scrolled all the way left and\n            // 0 when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft + el.scrollWidth - el.clientWidth;\n            }\n            else {\n                return -el.scrollLeft;\n            }\n        }\n        else {\n            // For NORMAL, as well as non-RTL contexts, scrollLeft is 0 when scrolled all the way left and\n            // (scrollWidth - clientWidth) when scrolled all the way right.\n            if (from == LEFT) {\n                return el.scrollLeft;\n            }\n            else {\n                return el.scrollWidth - el.clientWidth - el.scrollLeft;\n            }\n        }\n    }\n}\nCdkScrollable.ɵfac = function CdkScrollable_Factory(t) { return new (t || CdkScrollable)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8)); };\nCdkScrollable.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkScrollable, selectors: [[\"\", \"cdk-scrollable\", \"\"], [\"\", \"cdkScrollable\", \"\"]] });\n/** @nocollapse */\nCdkScrollable.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ScrollDispatcher },\n    { type: NgZone },\n    { type: Directionality, decorators: [{ type: Optional }] }\n];\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkScrollable, [{\n        type: Directive,\n        args: [{\n                selector: '[cdk-scrollable], [cdkScrollable]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ScrollDispatcher }, { type: ɵngcc0.NgZone }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }]; }, null); })();\nif (false) {\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._destroyed;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkScrollable.prototype._elementScrolled;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.elementRef;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.scrollDispatcher;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.ngZone;\n    /**\n     * @type {?}\n     * @protected\n     */\n    CdkScrollable.prototype.dir;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/viewport-ruler.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Time in ms to throttle the resize events by default.\n * @type {?}\n */\nconst DEFAULT_RESIZE_TIME = 20;\n/**\n * Object that holds the scroll position of the viewport in each direction.\n * @record\n */\nfunction ViewportScrollPosition() { }\nif (false) {\n    /** @type {?} */\n    ViewportScrollPosition.prototype.top;\n    /** @type {?} */\n    ViewportScrollPosition.prototype.left;\n}\n/**\n * Simple utility for getting the bounds of the browser viewport.\n * \\@docs-private\n */\nclass ViewportRuler {\n    /**\n     * @param {?} _platform\n     * @param {?} ngZone\n     */\n    constructor(_platform, ngZone) {\n        this._platform = _platform;\n        ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._change = _platform.isBrowser ?\n                merge(fromEvent(window, 'resize'), fromEvent(window, 'orientationchange')) :\n                of();\n            // Note that we need to do the subscription inside `runOutsideAngular`\n            // since subscribing is what causes the event listener to be added.\n            this._invalidateCache = this.change().subscribe((/**\n             * @return {?}\n             */\n            () => this._updateViewportSize()));\n        }));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._invalidateCache.unsubscribe();\n    }\n    /**\n     * Returns the viewport's width and height.\n     * @return {?}\n     */\n    getViewportSize() {\n        if (!this._viewportSize) {\n            this._updateViewportSize();\n        }\n        /** @type {?} */\n        const output = { width: this._viewportSize.width, height: this._viewportSize.height };\n        // If we're not on a browser, don't cache the size since it'll be mocked out anyway.\n        if (!this._platform.isBrowser) {\n            this._viewportSize = (/** @type {?} */ (null));\n        }\n        return output;\n    }\n    /**\n     * Gets a ClientRect for the viewport's bounds.\n     * @return {?}\n     */\n    getViewportRect() {\n        // Use the document element's bounding rect rather than the window scroll properties\n        // (e.g. pageYOffset, scrollY) due to in issue in Chrome and IE where window scroll\n        // properties and client coordinates (boundingClientRect, clientX/Y, etc.) are in different\n        // conceptual viewports. Under most circumstances these viewports are equivalent, but they\n        // can disagree when the page is pinch-zoomed (on devices that support touch).\n        // See https://bugs.chromium.org/p/chromium/issues/detail?id=489206#c4\n        // We use the documentElement instead of the body because, by default (without a css reset)\n        // browsers typically give the document body an 8px margin, which is not included in\n        // getBoundingClientRect().\n        /** @type {?} */\n        const scrollPosition = this.getViewportScrollPosition();\n        const { width, height } = this.getViewportSize();\n        return {\n            top: scrollPosition.top,\n            left: scrollPosition.left,\n            bottom: scrollPosition.top + height,\n            right: scrollPosition.left + width,\n            height,\n            width,\n        };\n    }\n    /**\n     * Gets the (top, left) scroll position of the viewport.\n     * @return {?}\n     */\n    getViewportScrollPosition() {\n        // While we can get a reference to the fake document\n        // during SSR, it doesn't have getBoundingClientRect.\n        if (!this._platform.isBrowser) {\n            return { top: 0, left: 0 };\n        }\n        // The top-left-corner of the viewport is determined by the scroll position of the document\n        // body, normally just (scrollLeft, scrollTop). However, Chrome and Firefox disagree about\n        // whether `document.body` or `document.documentElement` is the scrolled element, so reading\n        // `scrollTop` and `scrollLeft` is inconsistent. However, using the bounding rect of\n        // `document.documentElement` works consistently, where the `top` and `left` values will\n        // equal negative the scroll position.\n        /** @type {?} */\n        const documentElement = (/** @type {?} */ (document.documentElement));\n        /** @type {?} */\n        const documentRect = documentElement.getBoundingClientRect();\n        /** @type {?} */\n        const top = -documentRect.top || document.body.scrollTop || window.scrollY ||\n            documentElement.scrollTop || 0;\n        /** @type {?} */\n        const left = -documentRect.left || document.body.scrollLeft || window.scrollX ||\n            documentElement.scrollLeft || 0;\n        return { top, left };\n    }\n    /**\n     * Returns a stream that emits whenever the size of the viewport changes.\n     * @param {?=} throttleTime Time in milliseconds to throttle the stream.\n     * @return {?}\n     */\n    change(throttleTime = DEFAULT_RESIZE_TIME) {\n        return throttleTime > 0 ? this._change.pipe(auditTime(throttleTime)) : this._change;\n    }\n    /**\n     * Updates the cached viewport size.\n     * @private\n     * @return {?}\n     */\n    _updateViewportSize() {\n        this._viewportSize = this._platform.isBrowser ?\n            { width: window.innerWidth, height: window.innerHeight } :\n            { width: 0, height: 0 };\n    }\n}\nViewportRuler.ɵfac = function ViewportRuler_Factory(t) { return new (t || ViewportRuler)(ɵngcc0.ɵɵinject(ɵngcc1.Platform), ɵngcc0.ɵɵinject(ɵngcc0.NgZone)); };\n/** @nocollapse */\nViewportRuler.ctorParameters = () => [\n    { type: Platform },\n    { type: NgZone }\n];\n/** @nocollapse */ ViewportRuler.ɵprov = ɵɵdefineInjectable({ factory: function ViewportRuler_Factory() { return new ViewportRuler(ɵɵinject(Platform), ɵɵinject(NgZone)); }, token: ViewportRuler, providedIn: \"root\" });\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ViewportRuler, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: ɵngcc1.Platform }, { type: ɵngcc0.NgZone }]; }, null); })();\nif (false) {\n    /**\n     * Cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._viewportSize;\n    /**\n     * Stream of viewport change events.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._change;\n    /**\n     * Subscription to streams that invalidate the cached viewport dimensions.\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._invalidateCache;\n    /**\n     * @type {?}\n     * @private\n     */\n    ViewportRuler.prototype._platform;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-scroll-viewport.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Checks if the given ranges are equal.\n * @param {?} r1\n * @param {?} r2\n * @return {?}\n */\nfunction rangesEqual(r1, r2) {\n    return r1.start == r2.start && r1.end == r2.end;\n}\n/**\n * Scheduler to be used for scroll events. Needs to fall back to\n * something that doesn't rely on requestAnimationFrame on environments\n * that don't support it (e.g. server-side rendering).\n * @type {?}\n */\nconst SCROLL_SCHEDULER = typeof requestAnimationFrame !== 'undefined' ? animationFrameScheduler : asapScheduler;\n/**\n * A viewport that virtualizes its scrolling with the help of `CdkVirtualForOf`.\n */\nclass CdkVirtualScrollViewport extends CdkScrollable {\n    /**\n     * @param {?} elementRef\n     * @param {?} _changeDetectorRef\n     * @param {?} ngZone\n     * @param {?} _scrollStrategy\n     * @param {?} dir\n     * @param {?} scrollDispatcher\n     * @param {?=} viewportRuler\n     */\n    constructor(elementRef, _changeDetectorRef, ngZone, _scrollStrategy, dir, scrollDispatcher, \n    /**\n     * @deprecated `viewportRuler` parameter to become required.\n     * @breaking-change 11.0.0\n     */\n    viewportRuler) {\n        super(elementRef, scrollDispatcher, ngZone, dir);\n        this.elementRef = elementRef;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._scrollStrategy = _scrollStrategy;\n        /**\n         * Emits when the viewport is detached from a CdkVirtualForOf.\n         */\n        this._detachedSubject = new Subject();\n        /**\n         * Emits when the rendered range changes.\n         */\n        this._renderedRangeSubject = new Subject();\n        this._orientation = 'vertical';\n        // Note: we don't use the typical EventEmitter here because we need to subscribe to the scroll\n        // strategy lazily (i.e. only if the user is actually listening to the events). We do this because\n        // depending on how the strategy calculates the scrolled index, it may come at a cost to\n        // performance.\n        /**\n         * Emits when the index of the first element visible in the viewport changes.\n         */\n        this.scrolledIndexChange = new Observable((/**\n         * @param {?} observer\n         * @return {?}\n         */\n        (observer) => this._scrollStrategy.scrolledIndexChange.subscribe((/**\n         * @param {?} index\n         * @return {?}\n         */\n        index => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => this.ngZone.run((/**\n         * @return {?}\n         */\n        () => observer.next(index)))))))));\n        /**\n         * A stream that emits whenever the rendered range changes.\n         */\n        this.renderedRangeStream = this._renderedRangeSubject.asObservable();\n        /**\n         * The total size of all content (in pixels), including content that is not currently rendered.\n         */\n        this._totalContentSize = 0;\n        /**\n         * A string representing the `style.width` property value to be used for the spacer element.\n         */\n        this._totalContentWidth = '';\n        /**\n         * A string representing the `style.height` property value to be used for the spacer element.\n         */\n        this._totalContentHeight = '';\n        /**\n         * The currently rendered range of indices.\n         */\n        this._renderedRange = { start: 0, end: 0 };\n        /**\n         * The length of the data bound to this viewport (in number of items).\n         */\n        this._dataLength = 0;\n        /**\n         * The size of the viewport (in pixels).\n         */\n        this._viewportSize = 0;\n        /**\n         * The last rendered content offset that was set.\n         */\n        this._renderedContentOffset = 0;\n        /**\n         * Whether the last rendered content offset was to the end of the content (and therefore needs to\n         * be rewritten as an offset to the start of the content).\n         */\n        this._renderedContentOffsetNeedsRewrite = false;\n        /**\n         * Whether there is a pending change detection cycle.\n         */\n        this._isChangeDetectionPending = false;\n        /**\n         * A list of functions to run after the next change detection cycle.\n         */\n        this._runAfterChangeDetection = [];\n        /**\n         * Subscription to changes in the viewport size.\n         */\n        this._viewportChanges = Subscription.EMPTY;\n        if (!_scrollStrategy) {\n            throw Error('Error: cdk-virtual-scroll-viewport requires the \"itemSize\" property to be set.');\n        }\n        // @breaking-change 11.0.0 Remove null check for `viewportRuler`.\n        if (viewportRuler) {\n            this._viewportChanges = viewportRuler.change().subscribe((/**\n             * @return {?}\n             */\n            () => {\n                this.checkViewportSize();\n            }));\n        }\n    }\n    /**\n     * The direction the viewport scrolls.\n     * @return {?}\n     */\n    get orientation() {\n        return this._orientation;\n    }\n    /**\n     * @param {?} orientation\n     * @return {?}\n     */\n    set orientation(orientation) {\n        if (this._orientation !== orientation) {\n            this._orientation = orientation;\n            this._calculateSpacerSize();\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnInit() {\n        super.ngOnInit();\n        // It's still too early to measure the viewport at this point. Deferring with a promise allows\n        // the Viewport to be rendered with the correct size before we measure. We run this outside the\n        // zone to avoid causing more change detection cycles. We handle the change detection loop\n        // ourselves instead.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => Promise.resolve().then((/**\n         * @return {?}\n         */\n        () => {\n            this._measureViewportSize();\n            this._scrollStrategy.attach(this);\n            this.elementScrolled()\n                .pipe(\n            // Start off with a fake scroll event so we properly detect our initial position.\n            startWith((/** @type {?} */ (null))), \n            // Collect multiple events into one until the next animation frame. This way if\n            // there are multiple scroll events in the same frame we only need to recheck\n            // our layout once.\n            auditTime(0, SCROLL_SCHEDULER))\n                .subscribe((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentScrolled()));\n            this._markChangeDetectionNeeded();\n        }))));\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this.detach();\n        this._scrollStrategy.detach();\n        // Complete all subjects\n        this._renderedRangeSubject.complete();\n        this._detachedSubject.complete();\n        this._viewportChanges.unsubscribe();\n        super.ngOnDestroy();\n    }\n    /**\n     * Attaches a `CdkVirtualForOf` to this viewport.\n     * @param {?} forOf\n     * @return {?}\n     */\n    attach(forOf) {\n        if (this._forOf) {\n            throw Error('CdkVirtualScrollViewport is already attached.');\n        }\n        // Subscribe to the data stream of the CdkVirtualForOf to keep track of when the data length\n        // changes. Run outside the zone to avoid triggering change detection, since we're managing the\n        // change detection loop ourselves.\n        this.ngZone.runOutsideAngular((/**\n         * @return {?}\n         */\n        () => {\n            this._forOf = forOf;\n            this._forOf.dataStream.pipe(takeUntil(this._detachedSubject)).subscribe((/**\n             * @param {?} data\n             * @return {?}\n             */\n            data => {\n                /** @type {?} */\n                const newLength = data.length;\n                if (newLength !== this._dataLength) {\n                    this._dataLength = newLength;\n                    this._scrollStrategy.onDataLengthChanged();\n                }\n                this._doChangeDetection();\n            }));\n        }));\n    }\n    /**\n     * Detaches the current `CdkVirtualForOf`.\n     * @return {?}\n     */\n    detach() {\n        this._forOf = null;\n        this._detachedSubject.next();\n    }\n    /**\n     * Gets the length of the data bound to this viewport (in number of items).\n     * @return {?}\n     */\n    getDataLength() {\n        return this._dataLength;\n    }\n    /**\n     * Gets the size of the viewport (in pixels).\n     * @return {?}\n     */\n    getViewportSize() {\n        return this._viewportSize;\n    }\n    // TODO(mmalerba): This is technically out of sync with what's really rendered until a render\n    // cycle happens. I'm being careful to only call it after the render cycle is complete and before\n    // setting it to something else, but its error prone and should probably be split into\n    // `pendingRange` and `renderedRange`, the latter reflecting whats actually in the DOM.\n    /**\n     * Get the current rendered range of items.\n     * @return {?}\n     */\n    getRenderedRange() {\n        return this._renderedRange;\n    }\n    /**\n     * Sets the total size of all content (in pixels), including content that is not currently\n     * rendered.\n     * @param {?} size\n     * @return {?}\n     */\n    setTotalContentSize(size) {\n        if (this._totalContentSize !== size) {\n            this._totalContentSize = size;\n            this._calculateSpacerSize();\n            this._markChangeDetectionNeeded();\n        }\n    }\n    /**\n     * Sets the currently rendered range of indices.\n     * @param {?} range\n     * @return {?}\n     */\n    setRenderedRange(range) {\n        if (!rangesEqual(this._renderedRange, range)) {\n            this._renderedRangeSubject.next(this._renderedRange = range);\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => this._scrollStrategy.onContentRendered()));\n        }\n    }\n    /**\n     * Gets the offset from the start of the viewport to the start of the rendered data (in pixels).\n     * @return {?}\n     */\n    getOffsetToRenderedContentStart() {\n        return this._renderedContentOffsetNeedsRewrite ? null : this._renderedContentOffset;\n    }\n    /**\n     * Sets the offset from the start of the viewport to either the start or end of the rendered data\n     * (in pixels).\n     * @param {?} offset\n     * @param {?=} to\n     * @return {?}\n     */\n    setRenderedContentOffset(offset, to = 'to-start') {\n        // For a horizontal viewport in a right-to-left language we need to translate along the x-axis\n        // in the negative direction.\n        /** @type {?} */\n        const isRtl = this.dir && this.dir.value == 'rtl';\n        /** @type {?} */\n        const isHorizontal = this.orientation == 'horizontal';\n        /** @type {?} */\n        const axis = isHorizontal ? 'X' : 'Y';\n        /** @type {?} */\n        const axisDirection = isHorizontal && isRtl ? -1 : 1;\n        /** @type {?} */\n        let transform = `translate${axis}(${Number(axisDirection * offset)}px)`;\n        this._renderedContentOffset = offset;\n        if (to === 'to-end') {\n            transform += ` translate${axis}(-100%)`;\n            // The viewport should rewrite this as a `to-start` offset on the next render cycle. Otherwise\n            // elements will appear to expand in the wrong direction (e.g. `mat-expansion-panel` would\n            // expand upward).\n            this._renderedContentOffsetNeedsRewrite = true;\n        }\n        if (this._renderedContentTransform != transform) {\n            // We know this value is safe because we parse `offset` with `Number()` before passing it\n            // into the string.\n            this._renderedContentTransform = transform;\n            this._markChangeDetectionNeeded((/**\n             * @return {?}\n             */\n            () => {\n                if (this._renderedContentOffsetNeedsRewrite) {\n                    this._renderedContentOffset -= this.measureRenderedContentSize();\n                    this._renderedContentOffsetNeedsRewrite = false;\n                    this.setRenderedContentOffset(this._renderedContentOffset);\n                }\n                else {\n                    this._scrollStrategy.onRenderedOffsetChanged();\n                }\n            }));\n        }\n    }\n    /**\n     * Scrolls to the given offset from the start of the viewport. Please note that this is not always\n     * the same as setting `scrollTop` or `scrollLeft`. In a horizontal viewport with right-to-left\n     * direction, this would be the equivalent of setting a fictional `scrollRight` property.\n     * @param {?} offset The offset to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToOffset(offset, behavior = 'auto') {\n        /** @type {?} */\n        const options = { behavior };\n        if (this.orientation === 'horizontal') {\n            options.start = offset;\n        }\n        else {\n            options.top = offset;\n        }\n        this.scrollTo(options);\n    }\n    /**\n     * Scrolls to the offset for the given index.\n     * @param {?} index The index of the element to scroll to.\n     * @param {?=} behavior The ScrollBehavior to use when scrolling. Default is behavior is `auto`.\n     * @return {?}\n     */\n    scrollToIndex(index, behavior = 'auto') {\n        this._scrollStrategy.scrollToIndex(index, behavior);\n    }\n    /**\n     * Gets the current scroll offset from the start of the viewport (in pixels).\n     * @param {?=} from The edge to measure the offset from. Defaults to 'top' in vertical mode and 'start'\n     *     in horizontal mode.\n     * @return {?}\n     */\n    measureScrollOffset(from) {\n        return from ?\n            super.measureScrollOffset(from) :\n            super.measureScrollOffset(this.orientation === 'horizontal' ? 'start' : 'top');\n    }\n    /**\n     * Measure the combined size of all of the rendered items.\n     * @return {?}\n     */\n    measureRenderedContentSize() {\n        /** @type {?} */\n        const contentEl = this._contentWrapper.nativeElement;\n        return this.orientation === 'horizontal' ? contentEl.offsetWidth : contentEl.offsetHeight;\n    }\n    /**\n     * Measure the total combined size of the given range. Throws if the range includes items that are\n     * not rendered.\n     * @param {?} range\n     * @return {?}\n     */\n    measureRangeSize(range) {\n        if (!this._forOf) {\n            return 0;\n        }\n        return this._forOf.measureRangeSize(range, this.orientation);\n    }\n    /**\n     * Update the viewport dimensions and re-render.\n     * @return {?}\n     */\n    checkViewportSize() {\n        // TODO: Cleanup later when add logic for handling content resize\n        this._measureViewportSize();\n        this._scrollStrategy.onDataLengthChanged();\n    }\n    /**\n     * Measure the viewport size.\n     * @private\n     * @return {?}\n     */\n    _measureViewportSize() {\n        /** @type {?} */\n        const viewportEl = this.elementRef.nativeElement;\n        this._viewportSize = this.orientation === 'horizontal' ?\n            viewportEl.clientWidth : viewportEl.clientHeight;\n    }\n    /**\n     * Queue up change detection to run.\n     * @private\n     * @param {?=} runAfter\n     * @return {?}\n     */\n    _markChangeDetectionNeeded(runAfter) {\n        if (runAfter) {\n            this._runAfterChangeDetection.push(runAfter);\n        }\n        // Use a Promise to batch together calls to `_doChangeDetection`. This way if we set a bunch of\n        // properties sequentially we only have to run `_doChangeDetection` once at the end.\n        if (!this._isChangeDetectionPending) {\n            this._isChangeDetectionPending = true;\n            this.ngZone.runOutsideAngular((/**\n             * @return {?}\n             */\n            () => Promise.resolve().then((/**\n             * @return {?}\n             */\n            () => {\n                this._doChangeDetection();\n            }))));\n        }\n    }\n    /**\n     * Run change detection.\n     * @private\n     * @return {?}\n     */\n    _doChangeDetection() {\n        this._isChangeDetectionPending = false;\n        // Apply the content transform. The transform can't be set via an Angular binding because\n        // bypassSecurityTrustStyle is banned in Google. However the value is safe, it's composed of\n        // string literals, a variable that can only be 'X' or 'Y', and user input that is run through\n        // the `Number` function first to coerce it to a numeric value.\n        this._contentWrapper.nativeElement.style.transform = this._renderedContentTransform;\n        // Apply changes to Angular bindings. Note: We must call `markForCheck` to run change detection\n        // from the root, since the repeated items are content projected in. Calling `detectChanges`\n        // instead does not properly check the projected content.\n        this.ngZone.run((/**\n         * @return {?}\n         */\n        () => this._changeDetectorRef.markForCheck()));\n        /** @type {?} */\n        const runAfterChangeDetection = this._runAfterChangeDetection;\n        this._runAfterChangeDetection = [];\n        for (const fn of runAfterChangeDetection) {\n            fn();\n        }\n    }\n    /**\n     * Calculates the `style.width` and `style.height` for the spacer element.\n     * @private\n     * @return {?}\n     */\n    _calculateSpacerSize() {\n        this._totalContentHeight =\n            this.orientation === 'horizontal' ? '' : `${this._totalContentSize}px`;\n        this._totalContentWidth =\n            this.orientation === 'horizontal' ? `${this._totalContentSize}px` : '';\n    }\n}\nCdkVirtualScrollViewport.ɵfac = function CdkVirtualScrollViewport_Factory(t) { return new (t || CdkVirtualScrollViewport)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(VIRTUAL_SCROLL_STRATEGY, 8), ɵngcc0.ɵɵdirectiveInject(ɵngcc2.Directionality, 8), ɵngcc0.ɵɵdirectiveInject(ScrollDispatcher), ɵngcc0.ɵɵdirectiveInject(ViewportRuler, 8)); };\nCdkVirtualScrollViewport.ɵcmp = ɵngcc0.ɵɵdefineComponent({ type: CdkVirtualScrollViewport, selectors: [[\"cdk-virtual-scroll-viewport\"]], viewQuery: function CdkVirtualScrollViewport_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵstaticViewQuery(_c0, true);\n    } if (rf & 2) {\n        var _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx._contentWrapper = _t.first);\n    } }, hostAttrs: [1, \"cdk-virtual-scroll-viewport\"], hostVars: 4, hostBindings: function CdkVirtualScrollViewport_HostBindings(rf, ctx) { if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"cdk-virtual-scroll-orientation-horizontal\", ctx.orientation === \"horizontal\")(\"cdk-virtual-scroll-orientation-vertical\", ctx.orientation !== \"horizontal\");\n    } }, inputs: { orientation: \"orientation\" }, outputs: { scrolledIndexChange: \"scrolledIndexChange\" }, features: [ɵngcc0.ɵɵProvidersFeature([{\n                provide: CdkScrollable,\n                useExisting: CdkVirtualScrollViewport\n            }]), ɵngcc0.ɵɵInheritDefinitionFeature], ngContentSelectors: _c1, decls: 4, vars: 4, consts: [[1, \"cdk-virtual-scroll-content-wrapper\"], [\"contentWrapper\", \"\"], [1, \"cdk-virtual-scroll-spacer\"]], template: function CdkVirtualScrollViewport_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n        ɵngcc0.ɵɵprojection(2);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵelement(3, \"div\", 2);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵadvance(3);\n        ɵngcc0.ɵɵstyleProp(\"width\", ctx._totalContentWidth)(\"height\", ctx._totalContentHeight);\n    } }, styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"], encapsulation: 2, changeDetection: 0 });\n/** @nocollapse */\nCdkVirtualScrollViewport.ctorParameters = () => [\n    { type: ElementRef },\n    { type: ChangeDetectorRef },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [VIRTUAL_SCROLL_STRATEGY,] }] },\n    { type: Directionality, decorators: [{ type: Optional }] },\n    { type: ScrollDispatcher },\n    { type: ViewportRuler, decorators: [{ type: Optional }] }\n];\nCdkVirtualScrollViewport.propDecorators = {\n    orientation: [{ type: Input }],\n    scrolledIndexChange: [{ type: Output }],\n    _contentWrapper: [{ type: ViewChild, args: ['contentWrapper', { static: true },] }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualScrollViewport, [{\n        type: Component,\n        args: [{\n                selector: 'cdk-virtual-scroll-viewport',\n                template: \"<!--\\n  Wrap the rendered content in an element that will be used to offset it based on the scroll\\n  position.\\n-->\\n<div #contentWrapper class=\\\"cdk-virtual-scroll-content-wrapper\\\">\\n  <ng-content></ng-content>\\n</div>\\n<!--\\n  Spacer used to force the scrolling container to the correct size for the *total* number of items\\n  so that the scrollbar captures the size of the entire data set.\\n-->\\n<div class=\\\"cdk-virtual-scroll-spacer\\\"\\n     [style.width]=\\\"_totalContentWidth\\\" [style.height]=\\\"_totalContentHeight\\\"></div>\\n\",\n                host: {\n                    'class': 'cdk-virtual-scroll-viewport',\n                    '[class.cdk-virtual-scroll-orientation-horizontal]': 'orientation === \"horizontal\"',\n                    '[class.cdk-virtual-scroll-orientation-vertical]': 'orientation !== \"horizontal\"'\n                },\n                encapsulation: ViewEncapsulation.None,\n                changeDetection: ChangeDetectionStrategy.OnPush,\n                providers: [{\n                        provide: CdkScrollable,\n                        useExisting: CdkVirtualScrollViewport\n                    }],\n                styles: [\"cdk-virtual-scroll-viewport{display:block;position:relative;overflow:auto;contain:strict;transform:translateZ(0);will-change:scroll-position;-webkit-overflow-scrolling:touch}.cdk-virtual-scroll-content-wrapper{position:absolute;top:0;left:0;contain:content}[dir=rtl] .cdk-virtual-scroll-content-wrapper{right:0;left:auto}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper{min-height:100%}.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-horizontal .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-left:0;padding-right:0;margin-left:0;margin-right:0;border-left-width:0;border-right-width:0;outline:none}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper{min-width:100%}.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>dl:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ol:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>table:not([cdkVirtualFor]),.cdk-virtual-scroll-orientation-vertical .cdk-virtual-scroll-content-wrapper>ul:not([cdkVirtualFor]){padding-top:0;padding-bottom:0;margin-top:0;margin-bottom:0;border-top-width:0;border-bottom-width:0;outline:none}.cdk-virtual-scroll-spacer{position:absolute;top:0;left:0;height:1px;width:1px;transform-origin:0 0}[dir=rtl] .cdk-virtual-scroll-spacer{right:0;left:auto;transform-origin:100% 0}\\n\"]\n            }]\n    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.ChangeDetectorRef }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [VIRTUAL_SCROLL_STRATEGY]\n            }] }, { type: ɵngcc2.Directionality, decorators: [{\n                type: Optional\n            }] }, { type: ScrollDispatcher }, { type: ViewportRuler, decorators: [{\n                type: Optional\n            }] }]; }, { scrolledIndexChange: [{\n            type: Output\n        }], orientation: [{\n            type: Input\n        }], _contentWrapper: [{\n            type: ViewChild,\n            args: ['contentWrapper', { static: true }]\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the viewport is detached from a CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._detachedSubject;\n    /**\n     * Emits when the rendered range changes.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRangeSubject;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._orientation;\n    /**\n     * Emits when the index of the first element visible in the viewport changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.scrolledIndexChange;\n    /**\n     * The element that wraps the rendered content.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._contentWrapper;\n    /**\n     * A stream that emits whenever the rendered range changes.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype.renderedRangeStream;\n    /**\n     * The total size of all content (in pixels), including content that is not currently rendered.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._totalContentSize;\n    /**\n     * A string representing the `style.width` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentWidth;\n    /**\n     * A string representing the `style.height` property value to be used for the spacer element.\n     * @type {?}\n     */\n    CdkVirtualScrollViewport.prototype._totalContentHeight;\n    /**\n     * The CSS transform applied to the rendered subset of items so that they appear within the bounds\n     * of the visible viewport.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentTransform;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedRange;\n    /**\n     * The length of the data bound to this viewport (in number of items).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._dataLength;\n    /**\n     * The size of the viewport (in pixels).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportSize;\n    /**\n     * the currently attached CdkVirtualForOf.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._forOf;\n    /**\n     * The last rendered content offset that was set.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffset;\n    /**\n     * Whether the last rendered content offset was to the end of the content (and therefore needs to\n     * be rewritten as an offset to the start of the content).\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._renderedContentOffsetNeedsRewrite;\n    /**\n     * Whether there is a pending change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._isChangeDetectionPending;\n    /**\n     * A list of functions to run after the next change detection cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._runAfterChangeDetection;\n    /**\n     * Subscription to changes in the viewport size.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._viewportChanges;\n    /** @type {?} */\n    CdkVirtualScrollViewport.prototype.elementRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._changeDetectorRef;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualScrollViewport.prototype._scrollStrategy;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/virtual-for-of.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n/**\n * Helper to extract size from a DOM Node.\n * @param {?} orientation\n * @param {?} node\n * @return {?}\n */\nfunction getSize(orientation, node) {\n    /** @type {?} */\n    const el = (/** @type {?} */ (node));\n    if (!el.getBoundingClientRect) {\n        return 0;\n    }\n    /** @type {?} */\n    const rect = el.getBoundingClientRect();\n    return orientation == 'horizontal' ? rect.width : rect.height;\n}\n/**\n * A directive similar to `ngForOf` to be used for rendering data inside a virtual scrolling\n * container.\n * @template T\n */\nclass CdkVirtualForOf {\n    /**\n     * @param {?} _viewContainerRef\n     * @param {?} _template\n     * @param {?} _differs\n     * @param {?} _viewport\n     * @param {?} ngZone\n     */\n    constructor(_viewContainerRef, _template, _differs, _viewport, ngZone) {\n        this._viewContainerRef = _viewContainerRef;\n        this._template = _template;\n        this._differs = _differs;\n        this._viewport = _viewport;\n        /**\n         * Emits when the rendered view of the data changes.\n         */\n        this.viewChange = new Subject();\n        /**\n         * Subject that emits when a new DataSource instance is given.\n         */\n        this._dataSourceChanges = new Subject();\n        /**\n         * The size of the cache used to store templates that are not being used for re-use later.\n         * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n         */\n        this.cdkVirtualForTemplateCacheSize = 20;\n        /**\n         * Emits whenever the data in the current DataSource changes.\n         */\n        this.dataStream = this._dataSourceChanges\n            .pipe(\n        // Start off with null `DataSource`.\n        startWith((/** @type {?} */ (null))), \n        // Bundle up the previous and current data sources so we can work with both.\n        pairwise(), \n        // Use `_changeDataSource` to disconnect from the previous data source and connect to the\n        // new one, passing back a stream of data changes which we run through `switchMap` to give\n        // us a data stream that emits the latest data from whatever the current `DataSource` is.\n        switchMap((/**\n         * @param {?} __0\n         * @return {?}\n         */\n        ([prev, cur]) => this._changeDataSource(prev, cur))), \n        // Replay the last emitted data when someone subscribes.\n        shareReplay(1));\n        /**\n         * The differ used to calculate changes to the data.\n         */\n        this._differ = null;\n        /**\n         * The template cache used to hold on ot template instancess that have been stamped out, but don't\n         * currently need to be rendered. These instances will be reused in the future rather than\n         * stamping out brand new ones.\n         */\n        this._templateCache = [];\n        /**\n         * Whether the rendered data should be updated during the next ngDoCheck cycle.\n         */\n        this._needsUpdate = false;\n        this._destroyed = new Subject();\n        this.dataStream.subscribe((/**\n         * @param {?} data\n         * @return {?}\n         */\n        data => {\n            this._data = data;\n            this._onRenderedDataChange();\n        }));\n        this._viewport.renderedRangeStream.pipe(takeUntil(this._destroyed)).subscribe((/**\n         * @param {?} range\n         * @return {?}\n         */\n        range => {\n            this._renderedRange = range;\n            ngZone.run((/**\n             * @return {?}\n             */\n            () => this.viewChange.next(this._renderedRange)));\n            this._onRenderedDataChange();\n        }));\n        this._viewport.attach(this);\n    }\n    /**\n     * The DataSource to display.\n     * @return {?}\n     */\n    get cdkVirtualForOf() {\n        return this._cdkVirtualForOf;\n    }\n    /**\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForOf(value) {\n        this._cdkVirtualForOf = value;\n        if (isDataSource(value)) {\n            this._dataSourceChanges.next(value);\n        }\n        else {\n            // Slice the value if its an NgIterable to ensure we're working with an array.\n            this._dataSourceChanges.next(new ArrayDataSource(isObservable(value) ? value : Array.prototype.slice.call(value || [])));\n        }\n    }\n    /**\n     * The `TrackByFunction` to use for tracking changes. The `TrackByFunction` takes the index and\n     * the item and produces a value to be used as the item's identity when tracking changes.\n     * @return {?}\n     */\n    get cdkVirtualForTrackBy() {\n        return this._cdkVirtualForTrackBy;\n    }\n    /**\n     * @param {?} fn\n     * @return {?}\n     */\n    set cdkVirtualForTrackBy(fn) {\n        this._needsUpdate = true;\n        this._cdkVirtualForTrackBy = fn ?\n            (/**\n             * @param {?} index\n             * @param {?} item\n             * @return {?}\n             */\n            (index, item) => fn(index + (this._renderedRange ? this._renderedRange.start : 0), item)) :\n            undefined;\n    }\n    /**\n     * The template used to stamp out new elements.\n     * @param {?} value\n     * @return {?}\n     */\n    set cdkVirtualForTemplate(value) {\n        if (value) {\n            this._needsUpdate = true;\n            this._template = value;\n        }\n    }\n    /**\n     * Measures the combined size (width for horizontal orientation, height for vertical) of all items\n     * in the specified range. Throws an error if the range includes items that are not currently\n     * rendered.\n     * @param {?} range\n     * @param {?} orientation\n     * @return {?}\n     */\n    measureRangeSize(range, orientation) {\n        if (range.start >= range.end) {\n            return 0;\n        }\n        if (range.start < this._renderedRange.start || range.end > this._renderedRange.end) {\n            throw Error(`Error: attempted to measure an item that isn't rendered.`);\n        }\n        // The index into the list of rendered views for the first item in the range.\n        /** @type {?} */\n        const renderedStartIndex = range.start - this._renderedRange.start;\n        // The length of the range we're measuring.\n        /** @type {?} */\n        const rangeLen = range.end - range.start;\n        // Loop over all root nodes for all items in the range and sum up their size.\n        /** @type {?} */\n        let totalSize = 0;\n        /** @type {?} */\n        let i = rangeLen;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i + renderedStartIndex)));\n            /** @type {?} */\n            let j = view ? view.rootNodes.length : 0;\n            while (j--) {\n                totalSize += getSize(orientation, (/** @type {?} */ (view)).rootNodes[j]);\n            }\n        }\n        return totalSize;\n    }\n    /**\n     * @return {?}\n     */\n    ngDoCheck() {\n        if (this._differ && this._needsUpdate) {\n            // TODO(mmalerba): We should differentiate needs update due to scrolling and a new portion of\n            // this list being rendered (can use simpler algorithm) vs needs update due to data actually\n            // changing (need to do this diff).\n            /** @type {?} */\n            const changes = this._differ.diff(this._renderedItems);\n            if (!changes) {\n                this._updateContext();\n            }\n            else {\n                this._applyChanges(changes);\n            }\n            this._needsUpdate = false;\n        }\n    }\n    /**\n     * @return {?}\n     */\n    ngOnDestroy() {\n        this._viewport.detach();\n        this._dataSourceChanges.next();\n        this._dataSourceChanges.complete();\n        this.viewChange.complete();\n        this._destroyed.next();\n        this._destroyed.complete();\n        for (let view of this._templateCache) {\n            view.destroy();\n        }\n    }\n    /**\n     * React to scroll state changes in the viewport.\n     * @private\n     * @return {?}\n     */\n    _onRenderedDataChange() {\n        if (!this._renderedRange) {\n            return;\n        }\n        this._renderedItems = this._data.slice(this._renderedRange.start, this._renderedRange.end);\n        if (!this._differ) {\n            this._differ = this._differs.find(this._renderedItems).create(this.cdkVirtualForTrackBy);\n        }\n        this._needsUpdate = true;\n    }\n    /**\n     * Swap out one `DataSource` for another.\n     * @private\n     * @param {?} oldDs\n     * @param {?} newDs\n     * @return {?}\n     */\n    _changeDataSource(oldDs, newDs) {\n        if (oldDs) {\n            oldDs.disconnect(this);\n        }\n        this._needsUpdate = true;\n        return newDs ? newDs.connect(this) : of();\n    }\n    /**\n     * Update the `CdkVirtualForOfContext` for all views.\n     * @private\n     * @return {?}\n     */\n    _updateContext() {\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            let view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n            view.detectChanges();\n        }\n    }\n    /**\n     * Apply changes to the DOM.\n     * @private\n     * @param {?} changes\n     * @return {?}\n     */\n    _applyChanges(changes) {\n        // Rearrange the views to put them in the right location.\n        changes.forEachOperation((/**\n         * @param {?} record\n         * @param {?} adjustedPreviousIndex\n         * @param {?} currentIndex\n         * @return {?}\n         */\n        (record, adjustedPreviousIndex, currentIndex) => {\n            if (record.previousIndex == null) { // Item added.\n                // Item added.\n                /** @type {?} */\n                const view = this._insertViewForNewItem((/** @type {?} */ (currentIndex)));\n                view.context.$implicit = record.item;\n            }\n            else if (currentIndex == null) { // Item removed.\n                this._cacheView(this._detachView((/** @type {?} */ (adjustedPreviousIndex))));\n            }\n            else { // Item moved.\n                // Item moved.\n                /** @type {?} */\n                const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (adjustedPreviousIndex)))));\n                this._viewContainerRef.move(view, currentIndex);\n                view.context.$implicit = record.item;\n            }\n        }));\n        // Update $implicit for any items that had an identity change.\n        changes.forEachIdentityChange((/**\n         * @param {?} record\n         * @return {?}\n         */\n        (record) => {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get((/** @type {?} */ (record.currentIndex)))));\n            view.context.$implicit = record.item;\n        }));\n        // Update the context variables on all items.\n        /** @type {?} */\n        const count = this._data.length;\n        /** @type {?} */\n        let i = this._viewContainerRef.length;\n        while (i--) {\n            /** @type {?} */\n            const view = (/** @type {?} */ (this._viewContainerRef.get(i)));\n            view.context.index = this._renderedRange.start + i;\n            view.context.count = count;\n            this._updateComputedContextProperties(view.context);\n        }\n    }\n    /**\n     * Cache the given detached view.\n     * @private\n     * @param {?} view\n     * @return {?}\n     */\n    _cacheView(view) {\n        if (this._templateCache.length < this.cdkVirtualForTemplateCacheSize) {\n            this._templateCache.push(view);\n        }\n        else {\n            /** @type {?} */\n            const index = this._viewContainerRef.indexOf(view);\n            // It's very unlikely that the index will ever be -1, but just in case,\n            // destroy the view on its own, otherwise destroy it through the\n            // container to ensure that all the references are removed.\n            if (index === -1) {\n                view.destroy();\n            }\n            else {\n                this._viewContainerRef.remove(index);\n            }\n        }\n    }\n    /**\n     * Inserts a view for a new item, either from the cache or by creating a new one.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewForNewItem(index) {\n        return this._insertViewFromCache(index) || this._createEmbeddedViewAt(index);\n    }\n    /**\n     * Update the computed properties on the `CdkVirtualForOfContext`.\n     * @private\n     * @param {?} context\n     * @return {?}\n     */\n    _updateComputedContextProperties(context) {\n        context.first = context.index === 0;\n        context.last = context.index === context.count - 1;\n        context.even = context.index % 2 === 0;\n        context.odd = !context.even;\n    }\n    /**\n     * Creates a new embedded view and moves it to the given index\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _createEmbeddedViewAt(index) {\n        // Note that it's important that we insert the item directly at the proper index,\n        // rather than inserting it and the moving it in place, because if there's a directive\n        // on the same node that injects the `ViewContainerRef`, Angular will insert another\n        // comment node which can throw off the move when it's being repeated for all items.\n        return this._viewContainerRef.createEmbeddedView(this._template, {\n            $implicit: (/** @type {?} */ (null)),\n            // It's guaranteed that the iterable is not \"undefined\" or \"null\" because we only\n            // generate views for elements if the \"cdkVirtualForOf\" iterable has elements.\n            cdkVirtualForOf: (/** @type {?} */ (this._cdkVirtualForOf)),\n            index: -1,\n            count: -1,\n            first: false,\n            last: false,\n            odd: false,\n            even: false\n        }, index);\n    }\n    /**\n     * Inserts a recycled view from the cache at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _insertViewFromCache(index) {\n        /** @type {?} */\n        const cachedView = this._templateCache.pop();\n        if (cachedView) {\n            this._viewContainerRef.insert(cachedView, index);\n        }\n        return cachedView || null;\n    }\n    /**\n     * Detaches the embedded view at the given index.\n     * @private\n     * @param {?} index\n     * @return {?}\n     */\n    _detachView(index) {\n        return (/** @type {?} */ (this._viewContainerRef.detach(index)));\n    }\n}\nCdkVirtualForOf.ɵfac = function CdkVirtualForOf_Factory(t) { return new (t || CdkVirtualForOf)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.TemplateRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.IterableDiffers), ɵngcc0.ɵɵdirectiveInject(CdkVirtualScrollViewport, 4), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone)); };\nCdkVirtualForOf.ɵdir = ɵngcc0.ɵɵdefineDirective({ type: CdkVirtualForOf, selectors: [[\"\", \"cdkVirtualFor\", \"\", \"cdkVirtualForOf\", \"\"]], inputs: { cdkVirtualForTemplateCacheSize: \"cdkVirtualForTemplateCacheSize\", cdkVirtualForOf: \"cdkVirtualForOf\", cdkVirtualForTrackBy: \"cdkVirtualForTrackBy\", cdkVirtualForTemplate: \"cdkVirtualForTemplate\" } });\n/** @nocollapse */\nCdkVirtualForOf.ctorParameters = () => [\n    { type: ViewContainerRef },\n    { type: TemplateRef },\n    { type: IterableDiffers },\n    { type: CdkVirtualScrollViewport, decorators: [{ type: SkipSelf }] },\n    { type: NgZone }\n];\nCdkVirtualForOf.propDecorators = {\n    cdkVirtualForOf: [{ type: Input }],\n    cdkVirtualForTrackBy: [{ type: Input }],\n    cdkVirtualForTemplate: [{ type: Input }],\n    cdkVirtualForTemplateCacheSize: [{ type: Input }]\n};\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(CdkVirtualForOf, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkVirtualFor][cdkVirtualForOf]'\n            }]\n    }], function () { return [{ type: ɵngcc0.ViewContainerRef }, { type: ɵngcc0.TemplateRef }, { type: ɵngcc0.IterableDiffers }, { type: CdkVirtualScrollViewport, decorators: [{\n                type: SkipSelf\n            }] }, { type: ɵngcc0.NgZone }]; }, { cdkVirtualForTemplateCacheSize: [{\n            type: Input\n        }], cdkVirtualForOf: [{\n            type: Input\n        }], cdkVirtualForTrackBy: [{\n            type: Input\n        }], cdkVirtualForTemplate: [{\n            type: Input\n        }] }); })();\nif (false) {\n    /**\n     * Emits when the rendered view of the data changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.viewChange;\n    /**\n     * Subject that emits when a new DataSource instance is given.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._dataSourceChanges;\n    /** @type {?} */\n    CdkVirtualForOf.prototype._cdkVirtualForOf;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._cdkVirtualForTrackBy;\n    /**\n     * The size of the cache used to store templates that are not being used for re-use later.\n     * Setting the cache size to `0` will disable caching. Defaults to 20 templates.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.cdkVirtualForTemplateCacheSize;\n    /**\n     * Emits whenever the data in the current DataSource changes.\n     * @type {?}\n     */\n    CdkVirtualForOf.prototype.dataStream;\n    /**\n     * The differ used to calculate changes to the data.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differ;\n    /**\n     * The most recent data emitted from the DataSource.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._data;\n    /**\n     * The currently rendered items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedItems;\n    /**\n     * The currently rendered range of indices.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._renderedRange;\n    /**\n     * The template cache used to hold on ot template instancess that have been stamped out, but don't\n     * currently need to be rendered. These instances will be reused in the future rather than\n     * stamping out brand new ones.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._templateCache;\n    /**\n     * Whether the rendered data should be updated during the next ngDoCheck cycle.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._needsUpdate;\n    /**\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._destroyed;\n    /**\n     * The view container to add items to.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewContainerRef;\n    /**\n     * The template to use when stamping out new items.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._template;\n    /**\n     * The set of available differs.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._differs;\n    /**\n     * The virtual scrolling viewport that these items are being rendered in.\n     * @type {?}\n     * @private\n     */\n    CdkVirtualForOf.prototype._viewport;\n}\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/scrolling-module.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\nclass ScrollingModule {\n}\nScrollingModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({ type: ScrollingModule });\nScrollingModule.ɵinj = ɵngcc0.ɵɵdefineInjector({ factory: function ScrollingModule_Factory(t) { return new (t || ScrollingModule)(); }, imports: [[BidiModule, PlatformModule],\n        BidiModule] });\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ScrollingModule, { declarations: function () { return [CdkFixedSizeVirtualScroll,\n        CdkScrollable,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; }, imports: function () { return [BidiModule, PlatformModule]; }, exports: function () { return [BidiModule,\n        CdkFixedSizeVirtualScroll,\n        CdkScrollable,\n        CdkVirtualForOf,\n        CdkVirtualScrollViewport]; } }); })();\n/*@__PURE__*/ (function () { ɵngcc0.ɵsetClassMetadata(ScrollingModule, [{\n        type: NgModule,\n        args: [{\n                imports: [BidiModule, PlatformModule],\n                exports: [\n                    BidiModule,\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ],\n                declarations: [\n                    CdkFixedSizeVirtualScroll,\n                    CdkScrollable,\n                    CdkVirtualForOf,\n                    CdkVirtualScrollViewport,\n                ]\n            }]\n    }], null, null); })();\n\n/**\n * @fileoverview added by tsickle\n * Generated from: src/cdk/scrolling/public-api.ts\n * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CdkFixedSizeVirtualScroll, CdkScrollable, CdkVirtualForOf, CdkVirtualScrollViewport, DEFAULT_RESIZE_TIME, DEFAULT_SCROLL_TIME, FixedSizeVirtualScrollStrategy, ScrollDispatcher, ScrollingModule, VIRTUAL_SCROLL_STRATEGY, ViewportRuler, _fixedSizeVirtualScrollStrategyFactory };\n\n//# sourceMappingURL=scrolling.js.map","import { ElementRef } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a data-bound value (typically a string) to a boolean. */\nfunction coerceBooleanProperty(value) {\n    return value != null && `${value}` !== 'false';\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction coerceNumberProperty(value, fallbackValue = 0) {\n    return _isNumberValue(value) ? Number(value) : fallbackValue;\n}\n/**\n * Whether the provided value is considered a number.\n * @docs-private\n */\nfunction _isNumberValue(value) {\n    // parseFloat(value) handles most of the cases we're interested in (it treats null, empty string,\n    // and other non-number values as NaN, where Number just uses 0) but it considers the string\n    // '123hello' to be a valid number. Therefore we also check if Number(value) is NaN.\n    return !isNaN(parseFloat(value)) && !isNaN(Number(value));\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Wraps the provided value in an array, unless the provided value is an array. */\nfunction coerceArray(value) {\n    return Array.isArray(value) ? value : [value];\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Coerces a value to a CSS pixel value. */\nfunction coerceCssPixelValue(value) {\n    if (value == null) {\n        return '';\n    }\n    return typeof value === 'string' ? value : `${value}px`;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Coerces an ElementRef or an Element into an element.\n * Useful for APIs that can accept either a ref or the native element itself.\n */\nfunction coerceElement(elementOrRef) {\n    return elementOrRef instanceof ElementRef ? elementOrRef.nativeElement : elementOrRef;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { _isNumberValue, coerceArray, coerceBooleanProperty, coerceCssPixelValue, coerceElement, coerceNumberProperty };\n//# sourceMappingURL=coercion.js.map\n","import { Component, OnInit, Input, Output, EventEmitter } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-checkbox',\r\n  templateUrl: './checkbox.component.html',\r\n  styleUrls: ['./checkbox.component.scss']\r\n})\r\nexport class CheckboxComponent implements OnInit {\r\n  @Input() label = '';\r\n  @Input() checked = false;\r\n  @Input() invalid = false;\r\n  @Output() checkedChanged = new EventEmitter<boolean>();\r\n\r\n  constructor() {}\r\n\r\n  ngOnInit() {}\r\n\r\n  checkboxClicked() {\r\n    this.checkedChanged.emit(!this.checked);\r\n  }\r\n\r\n  checkboxKeyup(e: KeyboardEvent) {\r\n    // For space or enter keys\r\n    if (e.code === 'Space' || e.code === 'Enter') {\r\n      e.preventDefault();\r\n      e.stopPropagation();\r\n      this.checkboxClicked();\r\n    }\r\n  }\r\n}\r\n","<div class=\"site-checkbox\" [class.checked]=\"checked\" (click)=\"checkboxClicked()\" (keydown)=\"checkboxKeyup($event)\">\r\n  <div class=\"site-checkbox-input\" [class.invalid]=\"invalid\" tabindex=\"0\"></div>\r\n  <div class=\"site-checkbox-label\">{{ label }}</div>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CheckboxComponent } from './checkbox.component';\r\n\r\n@NgModule({\r\n  declarations: [CheckboxComponent],\r\n  exports: [CheckboxComponent]\r\n})\r\nexport class CheckboxModule {}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-join-button',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './join-button.component.html',\r\n  styleUrls: ['./join-button.component.scss']\r\n})\r\nexport class JoinButtonComponent {\r\n  @Input() joined: boolean = false;\r\n  @Input() disabled: boolean = false;\r\n  @Output() join = new EventEmitter<void>();\r\n}\r\n","<button class=\"join-button\" [ngClass]=\"{ joined: joined }\" (click)=\"join.emit()\" [disabled]=\"disabled\">\r\n  {{ joined ? 'משובץ' : 'שיבוץ' }}\r\n</button>\r\n","import { NgModule } from '@angular/core';\r\nimport { JoinButtonComponent } from './join-button.component';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n@NgModule({\r\n  declarations: [JoinButtonComponent],\r\n  exports: [JoinButtonComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class JoinButtonModule {}\r\n","import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Meeting, User } from 'models';\r\nimport { ParticipationsService } from '../../services/participations.service';\r\n\r\n@Component({\r\n  selector: 'app-meeting-join-button',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './meeting-join-button.component.html',\r\n  styleUrls: ['./meeting-join-button.component.scss']\r\n})\r\nexport class MeetingJoinButtonComponent {\r\n  @Input() user: User;\r\n  @Input() meeting: Meeting;\r\n\r\n  @Output() join = new EventEmitter<void>();\r\n\r\n  constructor(public participationsService: ParticipationsService) {}\r\n}\r\n","<app-join-button\r\n  [joined]=\"participationsService.isUserParticipatingMeeting(user, meeting)\"\r\n  [disabled]=\"!participationsService.isUserCanParticipatingMeeting(user, meeting)\"\r\n  (join)=\"join.emit()\"\r\n>\r\n</app-join-button>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { JoinButtonModule } from '../join-button/join-button.module';\r\nimport { MeetingJoinButtonComponent } from './meeting-join-button.component';\r\n\r\n@NgModule({\r\n  declarations: [MeetingJoinButtonComponent],\r\n  exports: [MeetingJoinButtonComponent],\r\n  imports: [CommonModule, JoinButtonModule]\r\n})\r\nexport class MeetingJoinButtonModule {}\r\n","import { Component, ChangeDetectionStrategy, Input, EventEmitter, Output } from '@angular/core';\r\nimport { Meeting, User } from 'models';\r\nimport { MEMORIAL_YEAR } from '../../../../constants';\r\nimport { ParticipationsService } from '../../../../services/participations.service';\r\nimport { AuthService } from 'src/app/shared/services/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-meeting-list-row',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './meeting-list-row.component.html',\r\n  styleUrls: ['./meeting-list-row.component.scss']\r\n})\r\nexport class MeetingListRowComponent {\r\n  @Input() user: User;\r\n  @Input() meeting: Meeting;\r\n  @Input() showBereaved = true;\r\n  @Output() login = new EventEmitter<void>();\r\n  @Output() joinMeeting = new EventEmitter<Meeting>();\r\n\r\n  public year = MEMORIAL_YEAR;\r\n  public sideMenuOpen = false;\r\n\r\n  constructor(public participationsService: ParticipationsService, public authService: AuthService) {}\r\n\r\n  onLogin() {\r\n    console.log('5555555555566666');\r\n\r\n    this.authService.requestToLogin('Login');\r\n  }\r\n}\r\n","<div class=\"meeting-item\">\r\n  <div class=\"meeting-item-col meeting-name\">\r\n    <a class=\"meeting-link\" [routerLink]=\"'/meetings/' + year + '/' + meeting.hostId + '/' + meeting.id\">\r\n      {{ meeting.title }}\r\n      <br />\r\n      לחץ לפרטי המפגש\r\n    </a>\r\n  </div>\r\n  <div class=\"meeting-item-col meeting-address-col\">\r\n    <div class=\"meeting-address\">\r\n      {{ meeting.address?.formattedAddress }}\r\n    </div>\r\n  </div>\r\n  <div class=\"meeting-item-col date-col\">\r\n    <div class=\"date\">\r\n      {{ meeting.date | date: 'dd.MM.yyyy' }}\r\n    </div>\r\n  </div>\r\n  <div class=\"meeting-item-col participants-col\">\r\n    <span class=\"mobile-label\">\r\n      מספר משתתפים:\r\n    </span>\r\n    {{ meeting.capacity }}\r\n    <span *ngIf=\"meeting.invited\" style=\"margin-right: 2px;\">\r\n      - מוזמנים בלבד\r\n    </span>\r\n  </div>\r\n  <div class=\"meeting-item-col meeting-bereaved\" *ngIf=\"showBereaved\">\r\n    <span class=\"mobile-label\">\r\n      אח\\ות:\r\n    </span>\r\n    <span *ngIf=\"meeting.bereaved\">\r\n      {{ meeting.bereaved.firstName + ' ' + meeting.bereaved.lastName }}\r\n    </span>\r\n  </div>\r\n  <div class=\"meeting-item-col meeting-join\" *ngIf=\"participationsService.isUserHaveAllDetails(user); else login\">\r\n    <app-meeting-join-button class=\"join-button\" [user]=\"user\" [meeting]=\"meeting\" (join)=\"joinMeeting.emit(meeting)\">\r\n    </app-meeting-join-button>\r\n  </div>\r\n\r\n  <ng-template #login>\r\n    <button (click)=\"onLogin()\">hjjj</button>\r\n  </ng-template>\r\n\r\n  <!-- <div *ngIf=\"number==5;else ShowDiff\">\r\n    The number is 5\r\n    </div> -->\r\n  <!-- <ng-template #login>\r\n    The number is not 5\r\n  </ng-template> -->\r\n</div>\r\n","import { Component, Input, OnChanges, SimpleChanges, Output, EventEmitter } from '@angular/core';\r\nimport { User, Meeting } from 'models';\r\nimport { ParticipationsService } from '../../../services/participations.service';\r\n\r\ninterface SortedColumn {\r\n  column: string;\r\n  direction: 'asc' | 'desc';\r\n}\r\n\r\n@Component({\r\n  selector: 'app-meetings-list',\r\n  templateUrl: './meetings-list.component.html',\r\n  styleUrls: ['./meetings-list.component.scss']\r\n})\r\nexport class MeetingsListComponent implements OnChanges {\r\n  @Input() meetings: Meeting[];\r\n  @Input() user: User;\r\n\r\n  @Output() joinMeeting = new EventEmitter<Meeting>();\r\n\r\n  isUserHaveAllDetails = false;\r\n  showFullMeetings = false;\r\n  filteredMeetings: Meeting[] = [];\r\n  sortedMeetings: Meeting[] = [];\r\n  sortedColumn: SortedColumn = {\r\n    column: 'title',\r\n    direction: 'asc'\r\n  };\r\n\r\n  constructor(public participationsService: ParticipationsService) {}\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (changes.meetings || changes.user) {\r\n      this.isUserHaveAllDetails = this.participationsService.isUserHaveAllDetails(this.user);\r\n      this.meetings = this.meetings || [];\r\n      this.filter();\r\n      this.sort();\r\n    }\r\n  }\r\n\r\n  trackByFn(index: number, item: Meeting) {\r\n    return item.id;\r\n  }\r\n\r\n  showFullMeetingsChanged(showFullMeetings: boolean) {\r\n    this.showFullMeetings = showFullMeetings;\r\n\r\n    this.filter();\r\n  }\r\n\r\n  filter() {\r\n    this.filteredMeetings = this.meetings.slice();\r\n\r\n    if (!this.showFullMeetings && this.isUserHaveAllDetails) {\r\n      this.filteredMeetings = this.meetings.filter(meeting => {\r\n        return (\r\n          this.participationsService.isUserParticipatingMeeting(this.user, meeting) ||\r\n          this.participationsService.isUserCanParticipatingMeeting(this.user, meeting)\r\n        );\r\n      });\r\n    }\r\n\r\n    this.sort();\r\n  }\r\n\r\n  sort() {\r\n    this.sortedMeetings = this.filteredMeetings.slice();\r\n\r\n    const column = this.sortedColumn.column;\r\n\r\n    this.sortedMeetings.sort((a, b) => {\r\n      let aValue: any;\r\n      let bValue: any;\r\n\r\n      if (this.participationsService.isUserParticipatingMeeting(this.user, a)) {\r\n        return -1;\r\n      } else if (this.participationsService.isUserParticipatingMeeting(this.user, b)) {\r\n        return 1;\r\n      }\r\n\r\n      if (!column) {\r\n        return 1;\r\n      }\r\n\r\n      if (column === 'address') {\r\n        aValue = a.address.latitude;\r\n        bValue = b.address.latitude;\r\n      } else if (column === 'bereaved') {\r\n        aValue = (a.bereaved && a.bereaved.firstName + a.bereaved.lastName) || '';\r\n        bValue = (b.bereaved && b.bereaved.firstName + b.bereaved.lastName) || '';\r\n      } else {\r\n        aValue = a[column] || '';\r\n        bValue = b[column] || '';\r\n      }\r\n\r\n      if (this.sortedColumn.direction === 'desc') {\r\n        [aValue, bValue] = [bValue, aValue];\r\n      }\r\n\r\n      return aValue.toString().localeCompare(bValue);\r\n    });\r\n  }\r\n}\r\n","<div class=\"show-full-meetings-container\" *ngIf=\"isUserHaveAllDetails\">\r\n  <app-checkbox\r\n    class=\"show-full-meetings\"\r\n    [checked]=\"showFullMeetings\"\r\n    (checkedChanged)=\"showFullMeetingsChanged($event)\"\r\n    [label]=\"'הצג מפגשים מלאים'\"\r\n  ></app-checkbox>\r\n</div>\r\n<app-list-header [(sort)]=\"sortedColumn\" (sortChange)=\"sort()\" class=\"list-header\">\r\n  <app-list-column [title]=\"'שם מפגש'\" [field]=\"'title'\" class=\"col\"> </app-list-column>\r\n  <app-list-column [title]=\"'כתובת'\" [field]=\"'address'\" class=\"col\"> </app-list-column>\r\n  <app-list-column [title]=\"'תאריך'\" [field]=\"'date'\" class=\"col date-col\"> </app-list-column>\r\n  <app-list-column [title]=\"'משתתפים'\" [field]=\"'capacity'\" class=\"col participants-col\"> </app-list-column>\r\n  <app-list-column\r\n    [title]=\"'אח/ות'\"\r\n    [field]=\"'bereaved'\"\r\n    class=\"col\"\r\n    *ngIf=\"!(showFullMeetings && user.role === 'bereaved')\"\r\n  >\r\n  </app-list-column>\r\n  <app-list-column class=\"col join-col\" *ngIf=\"participationsService.isUserHaveAllDetails(user)\"></app-list-column>\r\n</app-list-header>\r\n<div class=\"meeting-items-container\">\r\n  <cdk-virtual-scroll-viewport itemSize=\"50\" class=\"meeting-items\">\r\n    <app-meeting-list-row\r\n      *ngFor=\"let meeting of sortedMeetings; trackBy: trackByFn\"\r\n      [user]=\"user\"\r\n      [meeting]=\"meeting\"\r\n      [showBereaved]=\"!(showFullMeetings && user.role === 'bereaved')\"\r\n      (joinMeeting)=\"joinMeeting.emit(meeting)\"\r\n    ></app-meeting-list-row>\r\n  </cdk-virtual-scroll-viewport>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { MeetingsListComponent } from './meetings-list.component';\r\nimport { MeetingListRowComponent } from './meeting-list-row/meeting-list-row.component';\r\nimport { MeetingJoinButtonModule } from '../../meeting-join-button/meeting-join-button.module';\r\nimport { ListModule } from '../../list/list.module';\r\nimport { ScrollingModule } from '@angular/cdk/scrolling';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CheckboxModule } from '../../checkbox/checkbox.module';\r\n\r\nconst api = [MeetingsListComponent, MeetingListRowComponent];\r\n\r\n@NgModule({\r\n  imports: [MeetingJoinButtonModule, ListModule, ScrollingModule, CommonModule, RouterModule, CheckboxModule],\r\n  declarations: api,\r\n  exports: api\r\n})\r\nexport class MeetingsListModule {}\r\n"]}