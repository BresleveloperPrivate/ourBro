{"version":3,"sources":["webpack:///src/app/shared/components/places-select/places-select.component.ts","webpack:///src/app/shared/components/places-select/places-select.component.html","webpack:///src/app/shared/components/places-select/places-select.module.ts","webpack:///src/app/shared/components/remove-button/remove-button.component.ts","webpack:///src/app/shared/components/remove-button/remove-button.component.html","webpack:///src/app/shared/components/remove-button/remove-button.module.ts"],"names":["PlacesSelectComponent","mapsAPILoader","formattedAddress","change","getPlaceAutocomplete","load","then","autocomplete","google","maps","places","Autocomplete","addresstext","nativeElement","componentRestrictions","country","types","slice","event","addListener","place","getPlace","parsedAddress","formatted_address","replace","latitude","geometry","location","lat","longitude","lng","emit","selector","templateUrl","styleUrls","PlacesSelectModule","declarations","exports","RemoveButtonComponent","remove","changeDetection","OnPush","RemoveButtonModule","imports"],"mappings":"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","file":"common-es5.js","sourcesContent":["/// <reference types=\"@types/googlemaps\" />\r\n\r\nimport { Component, Input, Output, EventEmitter, ViewChild, AfterViewInit, ElementRef } from '@angular/core';\r\nimport { MapsAPILoader } from '@agm/core';\r\nimport { Address } from 'models';\r\n\r\n@Component({\r\n  selector: 'app-places-select',\r\n  templateUrl: './places-select.component.html',\r\n  styleUrls: ['./places-select.component.scss']\r\n})\r\nexport class PlacesSelectComponent implements AfterViewInit {\r\n  @Input() formattedAddress: string = '';\r\n  @Input() types: string[];\r\n  @Input() placeholder: string;\r\n  @Input() invalid: boolean;\r\n\r\n  @Output() change: EventEmitter<Address> = new EventEmitter();\r\n  @ViewChild('palcesInput') addresstext: ElementRef<HTMLInputElement>;\r\n\r\n  constructor(private mapsAPILoader: MapsAPILoader) {}\r\n\r\n  ngAfterViewInit() {\r\n    this.getPlaceAutocomplete();\r\n  }\r\n\r\n  private getPlaceAutocomplete() {\r\n    this.mapsAPILoader.load().then(() => {\r\n      const autocomplete = new google.maps.places.Autocomplete(this.addresstext.nativeElement, {\r\n        componentRestrictions: { country: ['IL', 'PS'] },\r\n        types: this.types.slice()\r\n      });\r\n\r\n      google.maps.event.addListener(autocomplete, 'place_changed', () => {\r\n        const place = autocomplete.getPlace();\r\n\r\n        const parsedAddress: Address = {\r\n          formattedAddress: place.formatted_address.replace(', ישראל', ''),\r\n          latitude: place.geometry.location.lat(),\r\n          longitude: place.geometry.location.lng()\r\n        };\r\n\r\n        this.change.emit(parsedAddress);\r\n      });\r\n    });\r\n  }\r\n}\r\n","<input\r\n  #palcesInput\r\n  class=\"form-field\"\r\n  type=\"text\"\r\n  [value]=\"formattedAddress\"\r\n  [class.invalid]=\"invalid\"\r\n  [placeholder]=\"placeholder\"\r\n  autocorrect=\"off\"\r\n  autocapitalize=\"off\"\r\n  spellcheck=\"off\"\r\n/>\r\n","import { NgModule } from '@angular/core';\r\nimport { PlacesSelectComponent } from './places-select.component';\r\n\r\n@NgModule({\r\n  declarations: [PlacesSelectComponent],\r\n  exports: [PlacesSelectComponent]\r\n})\r\nexport class PlacesSelectModule {}\r\n","import { Component, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-remove-button',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  templateUrl: './remove-button.component.html',\r\n  styleUrls: ['./remove-button.component.scss']\r\n})\r\nexport class RemoveButtonComponent {\r\n  @Output() remove = new EventEmitter<void>();\r\n}\r\n","<button class=\"site-button danger invert\" (click)=\"remove.emit()\">\r\n  <i class=\"far fa-trash-alt\"></i>\r\n  הסר אותי מהמפגש\r\n</button>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { RemoveButtonComponent } from './remove-button.component';\r\n\r\n@NgModule({\r\n  declarations: [RemoveButtonComponent],\r\n  exports: [RemoveButtonComponent],\r\n  imports: [CommonModule]\r\n})\r\nexport class RemoveButtonModule {}\r\n"]}